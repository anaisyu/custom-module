{"version":3,"file":"dy-custom-display.mjs","sources":["../../../projects/custom-display/src/lib/service/notifications/notification.service.ts","../../../projects/custom-display/src/lib/service/local-storage/local-storage.service.ts","../../../projects/custom-display/src/lib/service/translate/translation-client.service.ts","../../../projects/custom-display/src/lib/service/dy-text-editor/dy-text-editor.service.ts","../../../projects/custom-display/src/lib/directives/dy-translate.directive.ts","../../../projects/custom-display/src/lib/components/images/add-dyimage/upload-image-modal/upload-image-modal.component.ts","../../../projects/custom-display/src/lib/components/images/add-dyimage/upload-image-modal/upload-image-modal.component.html","../../../projects/custom-display/src/lib/service/image-upload/image-upload.service.ts","../../../projects/custom-display/src/lib/directives/dy-image-edit.directive.ts","../../../projects/custom-display/src/lib/directives/dy-transition.directive.ts","../../../projects/custom-display/src/lib/lib/title/my-title-strategy.ts","../../../projects/custom-display/src/lib/service/loading/loading.service.ts","../../../projects/custom-display/src/lib/lib/enable-credentials-interceptor.ts","../../../projects/custom-display/src/lib/service/user/user.service.ts","../../../projects/custom-display/src/lib/service/swipe/swipe-manager.service.ts","../../../projects/custom-display/src/lib/service/title/title.service.ts","../../../projects/custom-display/src/lib/service/description-meta/description-meta.service.ts","../../../projects/custom-display/src/lib/service/change-colors-service/change-colors.service.ts","../../../projects/custom-display/src/lib/service/calendly-service/calendly.service.ts","../../../projects/custom-display/src/lib/service/dy-contact/dy-contact.service.ts","../../../projects/custom-display/src/lib/components/notification/notification.component.ts","../../../projects/custom-display/src/lib/components/notification/notification.component.html","../../../projects/custom-display/src/lib/components/loading/loading.component.ts","../../../projects/custom-display/src/lib/components/loading/loading.component.html","../../../projects/custom-display/src/lib/components/images/add-dyimage/add-dyimage.component.ts","../../../projects/custom-display/src/lib/components/images/add-dyimage/add-dyimage.component.html","../../../projects/custom-display/src/lib/components/images/image-edit/image-edit.component.ts","../../../projects/custom-display/src/lib/components/images/image-edit/image-edit.component.html","../../../projects/custom-display/src/lib/components/images/tag/dy-img/dy-img.component.ts","../../../projects/custom-display/src/lib/components/images/tag/dy-img/dy-img.component.html","../../../projects/custom-display/src/lib/components/images/dy-swiper/dy-swiper.component.ts","../../../projects/custom-display/src/lib/components/images/dy-swiper/dy-swiper.component.html","../../../projects/custom-display/src/lib/components/images/dy-picture/dy-picture.component.ts","../../../projects/custom-display/src/lib/components/images/dy-picture/dy-picture.component.html","../../../projects/custom-display/src/lib/components/my-card/my-card.component.ts","../../../projects/custom-display/src/lib/components/my-card/my-card.component.html","../../../projects/custom-display/src/lib/components/calendly/calendly.component.ts","../../../projects/custom-display/src/lib/components/calendly/calendly.component.html","../../../projects/custom-display/src/lib/pipes/safe-pipe.pipe.ts","../../../projects/custom-display/src/lib/pipes/capitalize-first-letter.pipe.ts","../../../projects/custom-display/src/public-api.ts","../../../projects/custom-display/src/dy-custom-display.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Subject} from \"rxjs\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(private _snackBar: MatSnackBar) {\n  }\n\n  private _successMessage: Subject<string> = new Subject<string>();\n\n  get successMessage(): Subject<string> {\n    return this._successMessage;\n  }\n\n  private _errorMessage: Subject<string> = new Subject<string>();\n\n  get errorMessage(): Subject<string> {\n    return this._errorMessage;\n  }\n\n  newMessage(message: string, snack: boolean = false): void {\n    if(snack) {\n      this._snackBar.open(message, 'Fermer', {duration: 5000})\n    }\n    this._successMessage.next(message);\n  }\n\n  newError(message: string, snack: boolean = false): void {\n    if(snack) {\n      this._snackBar.open(message, 'Fermer', {\n        duration: 60 * 1000,\n        panelClass: 'error'\n      })\n    }\n    this._errorMessage.next(message);\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID, signal, Signal, WritableSignal} from '@angular/core';\nimport {isPlatformBrowser} from \"@angular/common\";\nimport {TranslationClientService} from \"../translate/translation-client.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  private readonly values: Map<string, WritableSignal<string | null>> = new Map([])\n\n  constructor(@Inject(PLATFORM_ID) private _platformId: Object, @Inject('LOCAL_STORAGE_KEYS') keys: string[] = []) {\n    const localKeys = [TranslationClientService.COOKIE_NAME, ...keys]\n\n    // init\n    localKeys.forEach(key => {\n      this.values.set(key, signal(null))\n    })\n    if (isPlatformBrowser(this._platformId)) {\n      localKeys.forEach(key => {\n        this.values.get(key)?.set(this.getFromStorage(key))\n      })\n      // Listen for changes to local storage\n      window.addEventListener('storage', (event) => {\n        if (event.storageArea === localStorage) {\n          console.log('new localstorage data')\n          localKeys.forEach(key => {\n            this.values.get(key)?.set(this.getFromStorage(key))\n          })\n        }\n      });\n    }\n  }\n\n  private getFromStorage(key: string): string | null {\n    if (isPlatformBrowser(this._platformId)) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        try {\n          const {value, expiry} = JSON.parse(item);\n          if (!expiry || new Date(expiry) > new Date()) {\n            return value;\n          } else {\n            localStorage.removeItem(key); // Remove expired token\n          }\n        } catch (e) {\n          console.error('Error parsing JSON from localStorage:', e);\n          localStorage.removeItem(key); // Remove corrupted item\n        }\n      }\n    }\n    return null;\n  }\n\n  setValue(key: string, value: string | null | undefined, expiresInMs: number = 1000*60*60*24) {\n    if (isPlatformBrowser(this._platformId)) {\n      const signalValue = this.values.get(key)!\n      if (value && value != signalValue()) {\n        const expiry = new Date().getTime() + expiresInMs;\n        localStorage.setItem(key, JSON.stringify({value, expiry}));\n        signalValue.set(value)\n      } else if (!value) {\n        localStorage.removeItem(key)\n        signalValue.set(null)\n      }\n    }\n  }\n\n  getValue(key: string) : Signal<string | null> {\n    return this.values.get(key)!.asReadonly()\n  }\n}\n","import {computed, Inject, Injectable, signal, Signal} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\nimport {NotificationService} from \"../notifications/notification.service\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\nimport {LocalStorageService} from \"../local-storage/local-storage.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationClientService {\n  public readonly changes: Signal<Object>;\n  public editSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public static readonly COOKIE_NAME = \"site-text\"\n\n  constructor(\n    private service: TranslateService,\n    private notificationService: NotificationService,\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    @Inject('backendUrl') private backendUrl: string,\n    ) {\n    // Retrieve object from the cookie\n    const objFromCookie = localStorageService.getValue(TranslationClientService.COOKIE_NAME);\n    this.changes = computed(() => objFromCookie() ? JSON.parse(objFromCookie()!) : {})\n  }\n\n  public static merge(left: any, right: any) {\n    if (typeof left !== 'object') {\n      return right;\n    }\n    let res = Object.assign({}, left);\n    for (const key of Object.keys(right)) {\n      if (left[key]) {\n        res[key] = this.merge(left[key], right[key])\n      } else {\n        res[key] = right[key]\n      }\n    }\n    return res;\n  }\n\n  next(key: string, data: string) {\n    let set: any = this.changes();\n\n    const keys: string[] = key.split('.')\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!set[keys[i]]) {\n        set[keys[i]] = {}\n      }\n      set = set[keys[i]]\n    }\n    if (!set[keys[keys.length - 1]]) {\n      set[keys[keys.length - 1]] = {}\n    }\n    set[keys[keys.length - 1]] = data;\n\n    this.saveCookie();\n  }\n\n  save(lang: string = 'fr') {\n    const loader = new TranslateHttpLoader(this.http, this.backendUrl + '/assets/get/')\n    loader.getTranslation(lang).subscribe(original => {\n      this.http.post(this.backendUrl + '/assets/save-new/' + lang,\n        TranslationClientService.merge(original, this.changes())\n      ).subscribe({\n        next: response => {\n          this.notificationService.newMessage('Vos modifications ont bien été sauvegardées.');\n          this.localStorageService.setValue(TranslationClientService.COOKIE_NAME, null)\n        }, error: (msg) => {\n          console.error(msg)\n          this.notificationService.newError('Echec lors de la sauvegarde. Merci de réessayer.')\n        }\n      })\n    })\n  }\n\n  cancel() {\n    this.localStorageService.setValue(TranslationClientService.COOKIE_NAME, null)\n    this.refresh();\n  }\n\n  private refresh() {\n    window.location.href = window.location.toString()\n  }\n\n  saveCookie(minutesExpire: number = 15) {\n    if (!this.changes() || Object.keys(this.changes()).length == 0) {\n      return\n    }\n    const date = new Date(Date.now());\n    date.setMinutes(date.getMinutes() + minutesExpire)\n    this.localStorageService.setValue(TranslationClientService.COOKIE_NAME,\n      JSON.stringify(this.changes()),\n      minutesExpire * 60 * 1000)\n  }\n\n  streamTranslation(key: string): Observable<string> {\n    let set: any = this.changes();\n\n    const keys: string[] = key.split('.')\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!set[keys[i]]) {\n        return this.service.stream(key)\n      }\n      set = set[keys[i]]\n    }\n    if (set[keys[keys.length - 1]]) {\n      return of(set[keys[keys.length - 1]] as string)\n    }\n\n    return this.service.stream(key);\n  }\n\n  sync(lang: string = 'fr') {\n      this.http.post(this.backendUrl + '/assets/sync/' + lang, {}).subscribe({\n      next: response => {\n        this.notificationService.newMessage('Synced');\n      }, error: (msg) => {\n        console.error(msg)\n        this.notificationService.newError('Sync failed')\n      }\n    })\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Subject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DyTextEditorService {\n  displayEditorSubject = new BehaviorSubject<boolean>(false)\n  newEditorData = new Subject<{ key: string, value: string }>();\n  editorDataChange = new Subject<{ key: string, value: string }>();\n\n  constructor() {\n  }\n\n  newChanges(key: string, value: string) {\n    this.editorDataChange.next({key: key, value: value})\n  }\n\n  addNewEditorData(key: string, value: string) {\n    this.newEditorData.next({key: key, value: value})\n  }\n}\n","import {AfterViewInit, Directive, ElementRef, HostListener, Input, OnInit, Renderer2} from '@angular/core';\nimport {TranslationClientService} from \"../service/translate/translation-client.service\";\nimport {DyTextEditorService} from \"../service/dy-text-editor/dy-text-editor.service\";\n\n@Directive({\n  standalone: true,\n  selector: '[appDyTranslate]'\n})\nexport class DyTranslateDirective implements OnInit, AfterViewInit {\n  @Input({required: true}) appDyTranslate!: string;\n  private editMode: boolean = false;\n  private previousValue: string = '';\n\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private clientService: TranslationClientService, private dyTextEditorService: DyTextEditorService) {\n  }\n\n  ngOnInit(): void {\n    const originalBorder = this.el.nativeElement.style.outline;\n\n    this.renderer.listen(this.el.nativeElement, 'paste', (event) => {\n      if(this.editMode) {\n        event.preventDefault();\n        const text = (event.clipboardData).getData('text');\n        this.renderer.setProperty(this.el.nativeElement, 'innerText', this.el.nativeElement.innerText + text);\n      }\n    });\n\n\n    this.clientService.editSubject.subscribe(editMode => {\n      this.editMode = editMode;\n      this.el.nativeElement.contentEditable = this.editMode;\n\n      // Get the native element using ElementRef\n      const element = this.el.nativeElement;\n\n      // Check the condition and apply the dashed border if needed\n      if (this.editMode) {\n        element.style.outline = '1px dashed #a9a9a9';\n      } else {\n        element.style.outline = originalBorder;\n      }\n    })\n  }\n\n  addNewEditorData(value: string) {\n    if (this.appDyTranslate.includes('editor')) {\n      this.dyTextEditorService.addNewEditorData(this.appDyTranslate, value)\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  public onKeyup(event: any): void {\n    const value: string = this.el.nativeElement.innerHTML\n    if (value != this.previousValue) {\n      this.previousValue = value\n      this.addNewEditorData(value)\n      this.save(value)\n    }\n  }\n\n  @HostListener('click') onClick() {\n    if (this.editMode && this.appDyTranslate.includes('editor')) {\n      this.dyTextEditorService.displayEditorSubject.next(true)\n      setTimeout(() => {\n        this.addNewEditorData(this.el.nativeElement.innerHTML)\n      }, 50) // why this timeout?\n    } else {\n      this.dyTextEditorService.displayEditorSubject.next(false)\n    }\n  }\n\n  save(value: string) {\n    if (value) {\n      this.clientService.next(this.appDyTranslate, value)\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.clientService.streamTranslation(this.appDyTranslate).subscribe(value => {\n      if (value == this.appDyTranslate && this.el.nativeElement.innerHTML) {\n        this.clientService.next(this.appDyTranslate, this.el.nativeElement.innerHTML)\n      } else {\n        this.el.nativeElement.innerHTML = value;\n      }\n      this.el.nativeElement.contentEditable = this.editMode;\n    })\n\n    if (this.appDyTranslate.includes('editor')) {\n      this.dyTextEditorService.editorDataChange.subscribe((newValue) => {\n        if (newValue.key == this.appDyTranslate) {\n          if (newValue.value != this.previousValue) {\n            this.previousValue = newValue.value\n            this.el.nativeElement.innerHTML = newValue.value\n            this.save(newValue.value)\n          }\n        }\n      })\n    }\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogRef,\n  MatDialogTitle,\n} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from \"@angular/material/icon\";\n\n\n@Component({\n  selector: 'app-upload-image-modal',\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatButtonModule,\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogClose,\n    ReactiveFormsModule,\n    MatIconModule,\n  ],\n  templateUrl: './upload-image-modal.component.html',\n  styleUrl: './upload-image-modal.component.scss'\n})\nexport class UploadImageModalComponent {\n  public imgAlt: string = '';\n  public file: any = undefined;\n\n  public preview: string = ''\n\n  constructor(\n    public dialogRef: MatDialogRef<UploadImageModalComponent>\n  ) {\n  }\n\n  onFileChanged(event: any) {\n    this.file = event.target.files[0];\n    this.preview = ''\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      console.log(e.target?.result);\n      this.preview = e.target?.result as string\n    }\n\n    reader.readAsDataURL(this.file);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Sélectionner une image</h1>\n<div mat-dialog-content>\n  <div style=\"width: 600px\">\n    <div class=\"s300\">\n      <div class=\"row\">\n        <div class=\"col-12\" style=\"margin-bottom: 1rem\">\n          <button (click)=\"fileInput.click()\" class=\"mat-primary\" mat-raised-button>\n            <mat-icon aria-hidden=\"false\" aria-label=\"upload\" fontIcon=\"upload\"></mat-icon>\n            <span>Sélectionner une image</span>\n            <input #fileInput (change)=\"onFileChanged($event)\" required style=\"display:none;\" type=\"file\"/>\n          </button>\n        </div>\n        <div class=\"col-12\">\n          <mat-form-field>\n            <mat-label>Description de l'image</mat-label>\n            <input [(ngModel)]=\"imgAlt\" matInput required>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n    <div class=\"s300\">\n      @if (preview) {\n        <img src=\"{{ preview }}\" alt=\"\" class=\"img-fluid\">\n      }\n    </div>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>Annuler</button>\n  <button [disabled]=\"!imgAlt || !file\" [mat-dialog-close]=\"{alt: imgAlt, file: file}\" class=\"mat-accent\"\n          mat-raised-button>Ajouter\n  </button>\n</div>\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {filter, map, Observable, switchMap} from \"rxjs\";\nimport {UploadImageResponse} from \"../../model/images/upload-image-response\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UploadImageModalComponent} from \"../../components/images/add-dyimage/upload-image-modal/upload-image-modal.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageUploadService {\n\n  constructor(public dialog: MatDialog, private http: HttpClient, @Inject('imageupload_url') private imageUploadUrl: string) { }\n\n  uploadImage(file: any): Observable<UploadImageResponse> {\n    const formData = new FormData()\n    formData.append('file', file, file.name);\n    return this.http.post<UploadImageResponse>(this.imageUploadUrl + '/uploads-v2/', formData);\n  }\n\n  openDialog(): Observable<{ urls: UploadImageResponse; alt: string }> {\n    const dialogRef = this.dialog.open(UploadImageModalComponent);\n\n    return dialogRef.afterClosed().pipe(\n      filter(result => result?.alt && result?.file),\n      switchMap((result) => {\n        return this.uploadImage(result.file).pipe(map(uploadResponse => {return {alt: result.alt, urls: uploadResponse}}))\n      }),\n    );\n  }\n}\n","import {Directive, ElementRef, HostListener, Inject, Input, OnInit} from '@angular/core';\nimport {zip} from \"rxjs\";\nimport {TranslationClientService} from \"../service/translate/translation-client.service\";\nimport {ImageUploadService} from \"../service/image-upload/image-upload.service\";\nimport {UploadImageResponse} from \"../model/images/upload-image-response\";\n\n@Directive({\n  selector: '[libDyImageEdit]',\n  standalone: true\n})\nexport class DyImageEditDirective implements OnInit {\n  @Input({required: true}) libDyImageEdit!: string;\n  @Input({required: true}) src!: string;\n\n  private editMode: boolean = false;\n\n  constructor(private el: ElementRef, private clientService: TranslationClientService, private imageUploadService: ImageUploadService, @Inject('backendUrl') private backendUrl: string) {\n  }\n\n  @HostListener('click')\n  public onKeyup(): void {\n    if (this.editMode) {\n      this.imageUploadService.openDialog().subscribe(res => {\n        this.changeImage(res.urls.originalUrl, res.alt)\n        this.save(res.urls, res.alt)\n      })\n    }\n  }\n\n  save(response: UploadImageResponse, alt: string) {\n    if (response && alt) {\n      this.clientService.next('images.' + this.libDyImageEdit + '.originalUrl', response.originalUrl)\n      this.clientService.next('images.' + this.libDyImageEdit + '.thumbnailUrl', response.thumbnailUrl)\n      response.compressedUrls.forEach((compressedUrl, index) => {\n        this.clientService.next('images.' + this.libDyImageEdit + '.compressed.' + index + '.url', compressedUrl.url)\n        this.clientService.next('images.' + this.libDyImageEdit + '.compressed.' + index + '.height', compressedUrl.height)\n        this.clientService.next('images.' + this.libDyImageEdit + '.compressed.' + index + '.width', compressedUrl.width)\n      })\n      this.clientService.next('images.' + this.libDyImageEdit + '.alt', alt)\n    }\n  }\n\n  ngOnInit(): void {\n    const originalBorder = this.el.nativeElement.style.border;\n    this.clientService.editSubject.subscribe(editMode => {\n      this.editMode = editMode;\n\n      // Get the native element using ElementRef\n      const element = this.el.nativeElement;\n      // Check the condition and apply the dashed border if needed\n      if (this.editMode) {\n        element.style.border = '2px dashed #a9a9a9';\n      } else {\n        element.style.border = originalBorder;\n      }\n    })\n\n    const urlKey = 'images.' + this.libDyImageEdit + '.originalUrl'\n    const altKey = 'images.' + this.libDyImageEdit + '.alt'\n\n    const key1$ = this.clientService.streamTranslation(urlKey);\n    const key2$ = this.clientService.streamTranslation(altKey);\n\n    zip([key1$, key2$]).subscribe(([url, alt]) => {\n      if (urlKey != url || altKey != alt) {\n        this.changeImage(url, alt)\n      }\n      this.el.nativeElement.contentEditable = this.editMode;\n    })\n  }\n\n  changeImage(url: string, alt: string) {\n    this.el.nativeElement.src = url\n    this.el.nativeElement.alt = alt\n\n  }\n\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef, HostListener,\n  Inject,\n  input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID\n} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {isPlatformBrowser} from \"@angular/common\";\n\n@Directive({\n  selector: '[dyTransition]',\n  standalone: true\n})\nexport class DyTransitionDirective implements AfterViewInit, OnInit, OnDestroy {\n  private subscription: Subscription = new Subscription()\n  private intervalId: any;\n\n  dyTransition = input.required()\n  constructor(private elementRef: ElementRef, private router: Router, @Inject(PLATFORM_ID) private _platformId: Object) {\n  }\n\n  ngOnDestroy(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n    this.subscription.unsubscribe()\n  }\n\n  ngOnInit(): void {\n    if(this.dyTransition() != 'none') {\n      this.elementRef.nativeElement.style['view-transition-name'] = this.dyTransition();\n    }\n    // Listen to router events\n    this.subscription.add(\n      this.router.events.subscribe(event => {\n        if (event) {\n          this.checkVisibility();\n        }\n      }));\n  }\n\n  private isElementInViewport(el: HTMLElement): boolean {\n    const rect = el.getBoundingClientRect();\n    const tolerance = 0.1; // 10% tolerance\n\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n\n    const topTolerance = tolerance * windowHeight;\n    const leftTolerance = tolerance * windowWidth;\n\n    return (\n      rect.top >= -topTolerance &&\n      rect.left >= -leftTolerance &&\n      rect.bottom <= (1 + tolerance) * windowHeight &&\n      rect.right <= (1 + tolerance) * windowWidth\n    );\n  }\n\n  private checkVisibility(): void {\n    if(isPlatformBrowser(this._platformId)) {\n      if (this.dyTransition() != 'none') {\n        if (this.isElementInViewport(this.elementRef.nativeElement)) {\n          this.elementRef.nativeElement.style['view-transition-name'] = this.dyTransition();\n        } else {\n          setTimeout(() => {\n            this.elementRef.nativeElement.style['view-transition-name'] = 'none';\n          }, 1)\n        }\n      }\n    } else {\n      if(this.dyTransition() != 'none') {\n        this.elementRef.nativeElement.style['view-transition-name'] = this.dyTransition();\n      }\n    }\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  @HostListener('window:click', ['$event'])\n  onScroll(): void {\n    this.checkVisibility();\n  }\n\n  ngAfterViewInit(): void {\n    this.checkVisibility(); // Initial check\n    if(isPlatformBrowser(this._platformId)) {\n      this.intervalId = setInterval(() => {\n        this.checkVisibility();\n      }, 500); // 500 milliseconds interval\n    }\n  }\n}\n","import {Inject, Injectable} from \"@angular/core\";\nimport {RouterStateSnapshot, TitleStrategy} from \"@angular/router\";\nimport {Title} from \"@angular/platform-browser\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable()\nexport class MyTitleStrategy extends TitleStrategy {\n  constructor(private readonly title: Title, private translate: TranslateService, @Inject('siteTitleBase') private siteTitleBase: string) {\n    super();\n  }\n\n  override updateTitle(routerState: RouterStateSnapshot) {\n    const title = this.buildTitle(routerState);\n    if (title !== undefined) {\n      if (title.length > 0) {\n        this.translate.stream(title).subscribe(res => {\n          this.title.setTitle(`${res} - ${this.siteTitleBase}`);\n        })\n      } else {\n        this.title.setTitle(this.siteTitleBase);\n      }\n    }\n  }\n}\n","import {computed, Injectable, Signal, signal, WritableSignal} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  private static numberOfLoadingProcess: WritableSignal<number> = signal(0);\n\n  constructor() {\n  }\n\n  static startLoading() {\n    LoadingService.numberOfLoadingProcess.set(LoadingService.numberOfLoadingProcess() + 1);\n  }\n\n  static stopLoading() {\n    LoadingService.numberOfLoadingProcess.set(LoadingService.numberOfLoadingProcess() - 1);\n    if (LoadingService.numberOfLoadingProcess() < 0) {\n      console.error(\"LoadingService: negative number of loading processes\")\n    }\n  }\n\n  static isLoading(): Signal<boolean> {\n    return computed(() => {return LoadingService.numberOfLoadingProcess() != 0});\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\n\nimport {finalize, Observable} from 'rxjs';\nimport {LoadingService} from \"../service/loading/loading.service\";\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class EnableCredentialsInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      withCredentials: true\n    });\n\n\n    const isGraphQLQuery = request.body && request.body.operationName && request.body.query &&\n      request.body.query.trim().startsWith('query');\n\n    if(request.method != \"GET\" && !isGraphQLQuery) {\n      LoadingService.startLoading();\n    }\n\n    return next.handle(request).pipe(finalize(() => {\n      if(request.method != \"GET\" && !isGraphQLQuery) {\n        LoadingService.stopLoading();\n      }\n    }));\n  }\n}\n\n\n","import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {map, Observable} from \"rxjs\";\nimport {User} from \"../../entities/user\";\nimport {isPlatformBrowser} from \"@angular/common\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private user?: User;\n\n  constructor(private http: HttpClient, @Inject('backendUrl') private backendUrl: string, @Inject(PLATFORM_ID) private _platformId: Object) {\n  }\n\n  getUser(): Observable<User> {\n    return this.http.get<User>(this.backendUrl + '/user', {transferCache: false}).pipe(map(\n      x => {\n        this.user = x\n        return x;\n      }\n    ));\n  }\n\n  isAdmin(): boolean {\n    return this.user ? this.hasAdminRole(this.user.roles) : this.backendUrl.includes('localhost');\n  }\n\n  isSuperAdmin(): boolean {\n    return (this.user && this.user.email) ? (this.hasAdminRole(this.user.roles) && this.user.email.includes('dahn')) : false;\n  }\n\n  private hasAdminRole(roles: string[]): boolean {\n    return roles.includes('ROLE_ADMIN') || this.backendUrl.includes('localhost');\n  }\n\n  isAdminOrRedirect(): void {\n    if (isPlatformBrowser(this._platformId)) {\n      this.getUser().subscribe({\n        next: user => {\n          if (!this.hasAdminRole(user.roles)) {\n            window.location.href = this.backendUrl + \"/login\"\n          }\n        },\n        error: err => {\n          console.log(err)\n          if (!this.backendUrl.includes('localhost')) {\n            window.location.href = this.backendUrl + \"/login\"\n          }\n        }\n      })\n    }\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwipeManagerService {\n  swipeRight: EventEmitter<void> = new EventEmitter<void>();\n  swipeLeft: EventEmitter<void> = new EventEmitter<void>();\n  private xDown = null;\n  private yDown: any = null;\n\n  constructor() {\n  }\n\n  handleStart = (event: TouchEvent) => {\n    this.handleTouchStart(event)\n  };\n\n  handleMove = (event: TouchEvent) => {\n    this.handleTouchMove(event)\n  };\n\n  keyPress = (event: KeyboardEvent) => {\n    if (event.code == 'ArrowLeft') {\n      this.left();\n    }\n    if (event.code == 'ArrowRight') {\n      this.right();\n    }\n  }\n\n  private getTouches(evt: any): any {\n    return evt.touches ||             // browser API\n      evt.originalEvent.touches; // jQuery\n  }\n\n  private handleTouchStart(evt: any): any {\n    const firstTouch = this.getTouches(evt)[0];\n    this.xDown = firstTouch.clientX;\n    this.yDown = firstTouch.clientY;\n  };\n\n  private right(): void {\n    console.log('right')\n\n    this.swipeRight.emit()\n  }\n\n  private left(): void {\n    console.log('left')\n    this.swipeLeft.emit()\n  }\n\n  private handleTouchMove(evt: any): any {\n    if (!this.xDown || !this.yDown) {\n      return;\n    }\n\n    const xUp = evt.touches[0].clientX;\n    const yUp = evt.touches[0].clientY;\n\n    const xDiff = this.xDown - xUp;\n    const yDiff = this.yDown - yUp;\n\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {/*most significant*/\n      if (xDiff > 0) {\n        /* right swipe */\n        this.right();\n      } else {\n        /* left swipe */\n        this.left()\n      }\n    } else {\n      if (yDiff > 0) {\n        /* down swipe */\n      } else {\n        /* up swipe */\n      }\n    }\n    /* reset values */\n    this.xDown = null;\n    this.yDown = null;\n  };\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Title} from \"@angular/platform-browser\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n\n  constructor(\n    private title: Title,\n    @Inject('siteTitleBase') private siteTitleBase: string\n  ) {\n\n  }\n\n  public setTitle(newTitle: string): void {\n    this.title.setTitle(newTitle);\n  }\n\n  public appendToTitle(newTitle: string): void {\n    this.setTitle(this.title.getTitle() + ' - ' + newTitle);\n  }\n\n  public appendToBaseTitle(newTitle: string): void {\n    this.setTitle(this.siteTitleBase + ' - ' + newTitle);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Meta} from \"@angular/platform-browser\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DescriptionMetaService {\n\n  constructor(private meta: Meta) {\n  }\n\n  updateDescription(newDescription: string): void {\n    this.meta.updateTag({name: 'description', content: newDescription});\n  }\n\n  appendToBaseDescription(desc: string) {\n    // this.updateDescription($ loc alize `Anaïs ゆ - also called AnaïsYu - is a swiss artist and painter. ` + desc);\n  }\n}\n","import {ElementRef, Injectable, Renderer2} from '@angular/core';\nimport {BehaviorSubject, combineLatest, map, Subject} from \"rxjs\";\nimport {TranslationClientService} from \"../translate/translation-client.service\";\nimport {Observable} from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangeColorsService {\n  cssVariableNames: string[] = [\n    '--dy-color-1-original',\n    '--dy-color-2-original',\n    '--dy-color-3-original',\n    '--dy-color-4-original',\n    '--dy-color-5-original',\n    '--dy-color-6-original',\n    '--dy-color-7-original',\n    '--dy-primary',\n    '--dy-primary-hover',\n    '--dy-secondary',\n    '--dy-secondary-hover',\n    '--dy-text',\n    '--dy-text-primary',\n    '--dy-text-secondary',\n  ];\n  private cssVariables: { [key: string]: string } = {};\n  private paletteCssVariables: { [key: string]: string } = {};\n  cssVariablesSubject: Subject<{ [key: string]: string }> = new BehaviorSubject<{ [key: string]: string }>({})\n  paletteSubject: Subject<string[]> = new BehaviorSubject<string[]>([])\n\n  displaySubject: BehaviorSubject<boolean> = new BehaviorSubject(false)\n  private element?: ElementRef;\n\n\n  private readonly ready1: Subject<boolean> = new Subject();\n  private readonly ready2: Subject<boolean> = new Subject();\n\n  ready: Observable<boolean> = combineLatest([this.ready1, this.ready2]).pipe(\n    map(([val1, val2]) => val1 && val2)\n  );\n\n\n\n  constructor(private clientService: TranslationClientService) { }\n\n  getStylesFromCssFile() {\n    const rootStyles = getComputedStyle(document.documentElement);\n    this.cssVariableNames.forEach(variable => {\n      if(rootStyles.getPropertyValue(variable).trim()) {\n        if (variable.includes('original')) {\n          this.paletteCssVariables[variable] = rootStyles.getPropertyValue(variable).trim();\n        } else if (!this.cssVariables[variable]) {\n          this.cssVariables[variable] = rootStyles.getPropertyValue(variable).trim();\n        }\n      }\n    });\n    this.cssVariablesSubject.next(Object.assign({}, this.cssVariables))\n    this.paletteSubject.next(Object.values(this.paletteCssVariables));\n    this.ready1.next(true)\n  }\n\n  registerElementRef(element: ElementRef){\n    // used in app component\n    this.element = element;\n  }\n\n  getStylesFromConfigFile(renderer: Renderer2) {\n    for (const name of this.cssVariableNames) {\n      this.clientService.streamTranslation(\"colors.\" + name).subscribe(value => {\n        if (value && value != (\"colors.\" + name)) {\n          this.changeCssVariable(name, value, renderer)\n          this.cssVariablesSubject.next(Object.assign({}, this.cssVariables))\n        }\n      })\n    }\n    setTimeout(() => {\n      this.ready2.next(true)\n    }, 200)\n  }\n\n\n  changeCssVariable(name: string, newValue: string, renderer: Renderer2) {\n    this.cssVariables[name] = newValue;\n\n    this.overrideCssProperties(renderer);\n  }\n\n  overrideCssProperties(renderer: Renderer2) {\n    let style = '';\n    for (const variable in this.cssVariables) {\n      style += `${variable}: ${this.cssVariables[variable]};\\n`\n    }\n    if(this.element) {\n      renderer.setProperty(this.element.nativeElement, 'style', style);\n    }\n  }\n\n  save() {\n    for (const variable in this.cssVariables) {\n      this.clientService.next(\"colors.\" + variable, this.cssVariables[variable])\n    }\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CalendlyService {\n    public static readonly showEventEmitter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    static show() {\n        this.showEventEmitter.next(true)\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {finalize, Observable, throwError} from \"rxjs\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {LoadingService} from '../loading/loading.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DyContactService {\n  formData: FormGroup = new FormGroup({\n    name: new FormControl('', Validators.required),\n    lastName: new FormControl(''),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    message: new FormControl('', Validators.required)\n  });\n  formDataLong: FormGroup = new FormGroup({\n    name: new FormControl('', Validators.required),\n    nom: new FormControl('', Validators.required),\n    lastName: new FormControl(''),\n    phone: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    message: new FormControl('', Validators.required)\n  });\n  private readonly formLoadedTimestamp: number;\n\n  constructor(private http: HttpClient, @Inject('backendUrl') private backendUrl: string) {\n    this.formLoadedTimestamp = Date.now();\n  }\n\n  sendContactForm(): Observable<any> {\n    return this.send(this.formData)\n  }\n  sendContactFormLong(): Observable<any> {\n    return this.send(this.formDataLong)\n  }\n\n  private send(form: FormGroup) : Observable<any> {\n    if (form.invalid || (Date.now() - this.formLoadedTimestamp) < 5000 || form.getRawValue().lastName) {\n      return throwError(() => 'form Invalid');\n    }\n    LoadingService.startLoading()\n    return this.http.get(this.backendUrl + '/contact', {params: form.getRawValue()}).pipe(finalize(() => {\n      LoadingService.stopLoading()\n    }));\n  }\n}\n","import {Component} from '@angular/core';\nimport {NotificationService} from \"../../service/notifications/notification.service\";\nimport {NgIf} from \"@angular/common\";\nimport {DyTranslateDirective} from \"../../directives/dy-translate.directive\";\n\n@Component({\n  selector: 'app-notification',\n  standalone: true,\n  templateUrl: './notification.component.html',\n  imports: [\n    NgIf,\n    DyTranslateDirective\n  ],\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent {\n  show: boolean = false;\n  error: boolean = false;\n  message: string = '';\n\n  private timeout: number = -1;\n\n  constructor(private service: NotificationService) {\n    this.service.successMessage.subscribe((msg) => {\n      this.message = msg;\n      this.show = true;\n      this.error = false;\n      this.prepareStop()\n    })\n    this.service.errorMessage.subscribe((msg) => {\n      this.message = msg;\n      this.show = true;\n      this.error = true;\n      this.prepareStop()\n    })\n  }\n\n  prepareStop() {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('end')\n      this.show = false;\n    }, 8000);\n  }\n\n  stop() {\n    this.show = false;\n  }\n}\n","<div *ngIf=\"show\" [class.show]=\"show\" aria-atomic=\"true\" aria-live=\"assertive\" class=\"toast\" role=\"alert\">\n  <div class=\"toast-header\">\n    <strong *ngIf=\"!error\" [appDyTranslate]=\"'notification.successHeader'\" class=\"me-auto\">Notification</strong>\n    <strong *ngIf=\"error\" [appDyTranslate]=\"'notification.errorHeader'\" class=\"me-auto\">Error</strong>\n    <button (click)=\"stop()\" aria-label=\"Close\" class=\"btn-close\" data-bs-dismiss=\"toast\" type=\"button\"></button>\n  </div>\n  <div class=\"toast-body\">\n    {{ message }}\n  </div>\n</div>\n","import {Component, input, Input, Signal} from '@angular/core';\nimport {AsyncPipe} from '@angular/common';\nimport {LoadingService} from \"../../service/loading/loading.service\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\n\n@Component({\n  selector: 'lib-loading',\n  standalone: true,\n  imports: [MatProgressSpinnerModule, AsyncPipe],\n  templateUrl: './loading.component.html',\n  styleUrl: './loading.component.css'\n})\nexport class LoadingComponent {\n  material = input(true);\n  isLoading: Signal<boolean>;\n\n  constructor() {\n    this.isLoading = LoadingService.isLoading()\n  }\n}\n","@if (isLoading()) {\n  @if (material()) {\n    <mat-spinner class=\"loading-spinner\"></mat-spinner>\n  } @else {\n    <div class=\"loading-spinner spinner-border\" style=\"width: 5rem; height: 5rem; font-size: 2em;\"\n         role=\"status\">\n      <span class=\"visually-hidden\">Loading...</span>\n    </div>\n  }\n}\n","import {Component, EventEmitter, Output} from '@angular/core';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {ImageUploadService} from \"../../../service/image-upload/image-upload.service\";\nimport {UploadImageResponse} from \"../../../model/images/upload-image-response\";\n\n@Component({\n  selector: 'lib-add-dyimage',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatButtonModule, MatDialogModule, MatIconModule,\n  ],\n  templateUrl: './add-dyimage.component.html',\n  styleUrls: ['./add-dyimage.component.css']\n})\nexport class AddDyimageComponent {\n  @Output() image: EventEmitter<{ alt: string, urls: UploadImageResponse }> = new EventEmitter<{\n    alt: string,\n    urls: UploadImageResponse\n  }>();\n\n  constructor(private service: ImageUploadService) {\n  }\n\n  openDialog() {\n    this.service.openDialog().subscribe(\n      {\n        next: output => {\n          this.image.emit(output)\n        },\n        error: (err) => {\n          console.log('error with uploading image')\n          console.log(err)\n        }\n      })\n  }\n}\n","<div>\n  <button (click)=\"openDialog()\" mat-raised-button>\n    <mat-icon fontIcon=\"add_circle\"></mat-icon>\n    Rajouter une nouvelle image\n  </button>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {TranslationClientService} from \"../../../service/translate/translation-client.service\";\n\n@Component({\n  selector: 'lib-image-edit',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './image-edit.component.html',\n  styleUrl: './image-edit.component.css'\n})\nexport class ImageEditComponent {\n  @Input() defaultUrl: string = '';\n  @Input({required: true}) private name!: string;\n\n  constructor(private service: TranslateService, private clientService: TranslationClientService) {\n\n  }\n\n}\n","<p>image-edit works!</p>\n","import {AfterViewChecked, Component, computed, ElementRef, input, model, ViewChild} from '@angular/core';\nimport {DyImage} from \"../../../../model/images/dy-image\";\nimport {CompressedUrl} from \"../../../../model/images/compressed-url\";\nimport {DyTransitionDirective} from \"../../../../directives/dy-transition.directive\";\n\n@Component({\n  selector: 'dy-img',\n  standalone: true,\n  imports: [\n    DyTransitionDirective\n  ],\n  templateUrl: './dy-img.component.html',\n  styleUrl: './dy-img.component.css'\n})\nexport class DyImgComponent implements AfterViewChecked {\n  @ViewChild('imageElement') imageElement!: ElementRef<HTMLImageElement>;\n\n  imgClass = input<string>('')\n  imgStyle = input<string>('')\n  image = input.required<DyImage>()\n  alt = input.required<string>()\n  transitionName = input<string>('none')\n  sizeRatio = input(100)\n\n  srcSet = computed(() => {\n    return this.image().compressedUrls.map((url: CompressedUrl) => `${url.url} ${url.width}w`).join(', ');\n  })\n  sizes = computed(() => {\n    return this.image().compressedUrls.map((url: CompressedUrl) => `(max-width: ${((Number(url.width) * 100) / this.sizeRatio())}px) ` + url.width + \"px\").join(', ');\n  })\n\n  height = model<number>()\n  width = model<number>()\n\n  ngAfterViewChecked(): void {\n    this.updateParentAttributes();\n  }\n\n  updateParentAttributes(): void {\n    const img = this.imageElement.nativeElement;\n    const parentAnchor = img.parentElement;\n    if (parentAnchor) {\n      // parentAnchor.setAttribute('href', img.src);\n      if (img.complete) {\n        this.updateAttributes(parentAnchor!, img);\n      } else {\n        img.onload = () => {\n          this.updateAttributes(parentAnchor!, img);\n        };\n      }\n    }\n  }\n\n  updateAttributes(parentAnchor: HTMLElement, img: HTMLImageElement): void {\n    const originalWidth = img.naturalWidth;\n    const originalHeight = img.naturalHeight;\n\n    const windowHeight = window.innerHeight * 0.9;\n\n    this.height.set(img.naturalHeight)\n    this.width.set(img.naturalWidth)\n    //   // Update parent <a> attributes\n    //   parentAnchor.setAttribute('data-pswp-width', Math.round(originalWidth / originalHeight * windowHeight).toString());\n    //   parentAnchor.setAttribute('data-pswp-height', windowHeight.toString());\n  }\n}\n","<img\n  #imageElement\n  [alt]=\"alt()\"\n  [class]=\"imgClass()\"\n  [dyTransition]=\"transitionName()\"\n  [sizes]=\"'(max-width: 768px) 100vw, '+sizeRatio()+'vw'\"\n  [src]=\"image().thumbnailUrl\"\n  [srcset]=\"srcSet()\"\n  [style]=\"imgStyle()\"\n/>\n","import {\n  AfterViewInit,\n  Component,\n  computed,\n  Inject,\n  input,\n  InputSignal,\n  OnChanges,\n  OnDestroy,\n  PLATFORM_ID,\n  signal,\n  SimpleChanges,\n  WritableSignal\n} from '@angular/core';\nimport {isPlatformBrowser, NgForOf, NgIf} from \"@angular/common\";\nimport PhotoSwipeLightbox from \"photoswipe/lightbox\";\nimport PhotoSwipe from \"photoswipe\";\n// import Swiper bundle with all modules installed\n// @ts-ignore\nimport Swiper from 'swiper/bundle';\nimport {DyImage} from \"../../../model/images/dy-image\";\nimport {DyTransitionDirective} from \"../../../directives/dy-transition.directive\";\nimport {DyImgComponent} from \"../tag/dy-img/dy-img.component\";\nimport {MatIcon} from \"@angular/material/icon\";\n\n@Component({\n  selector: 'app-dy-swiper',\n  standalone: true,\n  imports: [\n    NgForOf,\n    NgIf,\n    DyTransitionDirective,\n    DyImgComponent,\n    MatIcon\n  ],\n  templateUrl: './dy-swiper.component.html',\n  styleUrl: './dy-swiper.component.scss'\n})\nexport class DySwiperComponent implements OnDestroy, AfterViewInit, OnChanges {\n  active_id: number = -1;\n  pictures: InputSignal<Array<DyImage>> = input.required();\n  id = input('swiper')\n  noGallery = input(false)\n  withGallery = computed(() => this.noGallery() ? false : this.pictures() ? this.pictures().length > 1 : false);\n  slidesPerView = input(1)\n  spaceBetween = input(0)\n  themeColor = input('#646464')\n  margin_x: InputSignal<number> = input(5);\n  transition: InputSignal<string> = input('none');\n  sizes = computed(() => {\n    const map = new Map<string, { height: WritableSignal<number>, width: WritableSignal<number> }>();\n    this.pictures().forEach(pic => {\n      map.set(pic.originalUrl, {height: signal(0), width: signal(0)});\n    });\n    return map\n  })\n  private swiper?: Swiper;\n  private lightbox?: PhotoSwipeLightbox;\n\n  constructor(@Inject(PLATFORM_ID) private _platformId: Object) {\n  }\n\n\n  goto(id: number): void {\n    this.swiper!.slideToLoop(id)\n  }\n\n\n  getThumbnailHeight(pictures: Array<DyImage>) {\n    return Math.min(100 / pictures.length, 33);\n  }\n\n  ngOnDestroy(): void {\n    this.lightbox?.destroy()\n    this.swiper?.destroy()\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['pictures'] && changes['pictures'].previousValue) {\n      // Check if inputChangeTrigger has changed\n      // You can add more conditions based on your requirements\n      this.ngOnDestroy()\n      this.ngAfterViewInit()\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this._platformId)) {\n      this.swiper = new Swiper(`#${this.id()}`, {\n        // Optional parameters\n        loop: true,\n        keyboard: {\n          enabled: true,\n          onlyInViewport: false,\n        },\n        // If we need pagination\n        pagination: {\n          el: '.swiper-pagination',\n        },\n\n        // Navigation arrows\n        navigation: {\n          enabled: this.pictures().length > 1,\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev',\n        },\n        // Responsive breakpoints\n        breakpoints: {\n          // when window width is >= 640px\n          640: {\n            enabled: this.pictures().length > this.slidesPerView(),\n            navigation: {\n              nextEl: '.swiper-button-next-dy' + this.id(),\n              prevEl: '.swiper-button-prev-dy' + this.id(),\n            },\n            spaceBetween: this.spaceBetween(),\n            slidesPerView: this.slidesPerView(), // or 4 depending on your preference\n          },\n          // you can add more breakpoints if needed\n        },\n        // And if we need scrollbar\n        scrollbar: {\n          hide: true,\n        },\n\n        on: {\n          slideChangeTransitionEnd: (swiper: Swiper) => {\n            console.log(swiper.realIndex)\n            this.changeActiveIndex(swiper.realIndex)\n          }\n        }\n      });\n\n      setTimeout(() => {\n        this.lightbox = new PhotoSwipeLightbox({\n          gallery: `#${this.id()}`,\n          children: 'a',\n          pswpModule: PhotoSwipe,\n          zoom: true\n        })\n        this.lightbox.init()\n      }, 100);\n    }\n  }\n\n  changeActiveIndex(index: number): void {\n    this.active_id = index;\n  }\n\n}\n","<div [class.col-md-10]=\"withGallery()\" [class.col-md-12]=\"!withGallery()\" [style.--swiper-theme-color]=\"themeColor()\">\n  <div style=\"display: flex; align-items: center;\" [class.hide-arrows]=\"pictures().length <= slidesPerView()\">\n    <div class=\"dy-arrow text-center\">\n      <mat-icon [class]=\"'swiper-button-prev-dy' + id()\" class=\"!w-full\" [inline]=\"true\"\n                style=\"font-size: 4rem; color: var(--dy-primary)\">chevron_left\n      </mat-icon>\n    </div>\n    <div class=\"dy-main\">\n      <div [id]=\"id()\" class=\"swiper\">\n        <!-- Additional required wrapper -->\n        <div class=\"swiper-wrapper\">\n          @for (picture of pictures(); track picture.originalUrl) {\n\n            <div class=\"swiper-slide\" id=\"{{ picture.originalUrl }}\">\n              <div class=\"picsum-img-wrapper\"\n              >\n                <div\n                  [style.padding-left]=\"margin_x() + '%'\"\n                  [style.padding-right]=\"margin_x() + '%'\"\n                >\n                  <a style=\"width: 100%\" [href]=\"picture.originalUrl\"\n                     [attr.data-pswp-width]=\"sizes().get(picture.originalUrl)!.width()*this.slidesPerView()\"\n                     [attr.data-pswp-height]=\"sizes().get(picture.originalUrl)!.height()*this.slidesPerView()\"\n                     class=\"img-link\" target=\"_blank\">\n                    <dy-img [imgStyle]=\"'width: 100%; height: auto;'\" [sizeRatio]=\"100/this.slidesPerView()\" [image]=\"picture\"\n                            [alt]=\"picture.alt ?? 'swiper image'\" [transitionName]=\"$first ? transition() : 'none'\"\n                            [(height)]=\"sizes().get(picture.originalUrl)!.height\"\n                            [(width)]=\"sizes().get(picture.originalUrl)!.width\"></dy-img>\n                  </a>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n        <div class=\"swiper-pagination\"></div>\n\n        <div class=\"swiper-button-prev\"></div>\n        <div class=\"swiper-button-next\"></div>\n      </div>\n    </div>\n    <div class=\"text-center dy-arrow\">\n      <mat-icon [class]=\"'swiper-button-next-dy' + id()\" class=\"text-primary-inverse !w-full\" [inline]=\"true\"\n                style=\"font-size: 4rem; color: var(--dy-primary)\">chevron_right\n      </mat-icon>\n    </div>\n  </div>\n  <div *ngIf=\"withGallery()\" class=\"row\">\n    <div class=\"hidden md:block col-md-2 position-relative\">\n      <div id=\"image-list-detail\">\n        <div class=\"ab\">\n          <ng-container *ngFor=\"let picture of pictures(); let i = index\">\n            <img (click)=\"goto(i)\"\n                 [class.ab_active]=\"i == active_id\"\n                 [src]=\"picture.thumbnailUrl\"\n                 [style.height]=\"getThumbnailHeight(pictures()) + '%'\"\n                 [style.width]=\"getThumbnailHeight(pictures()) + '%'\"\n                 alt=\"thumbnail\"\n                 class=\"cd\"\n            />\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  computed,\n  ElementRef,\n  HostListener,\n  input,\n  InputSignal,\n  OnInit,\n  signal,\n  Signal,\n  ViewChild,\n  WritableSignal\n} from '@angular/core';\nimport {UploadImageResponse} from \"../../../model/images/upload-image-response\";\nimport {zip} from \"rxjs\";\nimport {TranslationClientService} from \"../../../service/translate/translation-client.service\";\nimport {ImageUploadService} from \"../../../service/image-upload/image-upload.service\";\nimport {DyImgComponent} from \"../tag/dy-img/dy-img.component\";\n\n@Component({\n  selector: 'lib-dy-picture',\n  standalone: true,\n  imports: [\n    DyImgComponent\n  ],\n  templateUrl: './dy-picture.component.html',\n  styleUrl: './dy-picture.component.css'\n})\nexport class DyPictureComponent implements OnInit, AfterViewInit {\n  readonly originalSrc: InputSignal<string> = input.required<string>();\n  readonly originalAlt: InputSignal<string> = input.required<string>();\n  readonly key: InputSignal<string> = input.required<string>();\n  readonly imgClass: InputSignal<string> = input<string>('');\n  readonly lazy: InputSignal<boolean> = input<boolean>(false);\n  readonly proportion: InputSignal<number> = input<number>(100);\n\n  private readonly storedImage: WritableSignal<UploadImageResponse | undefined> = signal(undefined)\n  readonly imageToDisplay: Signal<UploadImageResponse> = computed(() => {\n    return this.storedImage() ?? {originalUrl: this.originalSrc(), thumbnailUrl: this.originalSrc(), compressedUrls: []}\n  })\n  private readonly storedAlt: WritableSignal<string | undefined> = signal(undefined)\n  readonly altToDisplay: Signal<string> = computed(() => {\n    return this.storedAlt() ?? this.originalAlt()\n  })\n  editMode = signal(false);\n\n  constructor(private clientService: TranslationClientService, private imageUploadService: ImageUploadService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.clientService.editSubject.subscribe(editMode => {\n      this.editMode.set(editMode);\n    })\n  }\n\n  @HostListener('click')\n  public onKeyup(): void {\n    if (this.editMode()) {\n      this.imageUploadService.openDialog().subscribe(res => {\n        this.changeImage(res.urls, res.alt)\n        this.save(res.urls, res.alt)\n      })\n    }\n  }\n\n  save(response: UploadImageResponse, alt: string) {\n    if (response && alt) {\n      this.clientService.next('images.' + this.key() + '.originalUrl', response.originalUrl)\n      this.clientService.next('images.' + this.key() + '.thumbnailUrl', response.thumbnailUrl)\n      response.compressedUrls.forEach((compressedUrl, index) => {\n        this.clientService.next('images.' + this.key() + '.compressed-' + index + '.url', compressedUrl.url)\n        this.clientService.next('images.' + this.key() + '.compressed-' + index + '.height', compressedUrl.height)\n        this.clientService.next('images.' + this.key() + '.compressed-' + index + '.width', compressedUrl.width)\n      })\n      this.clientService.next('images.' + this.key() + '.alt', alt)\n    }\n  }\n\n  ngOnInit(): void {\n\n    const urlKey = 'images.' + this.key() + '.originalUrl'\n    const altKey = 'images.' + this.key() + '.alt'\n\n    const key1$ = this.clientService.streamTranslation(urlKey);\n    const key2$ = this.clientService.streamTranslation(altKey);\n    /* *** IMPORTANT here is the number of different image compress size returned by backend (5): \"400\", \"600\", \"800\", \"1000\", \"1200\" *** */\n    const keyUrl0$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-0.url');\n    const keyHeight0$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-0.height');\n    const keyWidth0$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-0.width');\n    const keyUrl1$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-1.url');\n    const keyHeight1$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-1.height');\n    const keyWidth1$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-1.width');\n    const keyUrl2$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-2.url');\n    const keyHeight2$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-2.height');\n    const keyWidth2$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-2.width');\n    const keyUrl3$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-3.url');\n    const keyHeight3$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-3.height');\n    const keyWidth3$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-3.width');\n    const keyUrl4$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-4.url');\n    const keyHeight4$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-4.height');\n    const keyWidth4$ = this.clientService.streamTranslation('images.' + this.key() + '.compressed-4.width');\n\n    zip([\n      key1$, key2$,\n      keyUrl0$, keyHeight0$, keyWidth0$, keyUrl1$, keyHeight1$, keyWidth1$, keyUrl2$, keyHeight2$, keyWidth2$, keyUrl3$, keyHeight3$, keyWidth3$, keyUrl4$, keyHeight4$, keyWidth4$\n\n    ]).subscribe(([url, alt,\n                    keyUrl0,\n                    keyHeight0,\n                    keyWidth0,\n                    keyUrl1,\n                    keyHeight1,\n                    keyWidth1,\n                    keyUrl2,\n                    keyHeight2,\n                    keyWidth2,\n                    keyUrl3,\n                    keyHeight3,\n                    keyWidth3,\n                    keyUrl4,\n                    keyHeight4,\n                    keyWidth4\n                  ]) => {\n      if (urlKey != url || altKey != alt) {\n        const image: UploadImageResponse = {\n          originalUrl: url, thumbnailUrl: url, compressedUrls: [\n            {url: keyUrl0, width: keyWidth0, height: keyHeight0},\n            {url: keyUrl1, width: keyWidth1, height: keyHeight1},\n            {url: keyUrl2, width: keyWidth2, height: keyHeight2},\n            {url: keyUrl3, width: keyWidth3, height: keyHeight3},\n            {url: keyUrl4, width: keyWidth4, height: keyHeight4},\n          ].filter(x => x.url.includes('://'))\n        }\n        this.changeImage(image, alt)\n      }\n    })\n  }\n\n  changeImage(image: UploadImageResponse, alt: string) {\n    const smallerImage = image.compressedUrls.find((elem) => {\n      return elem.height == '400' || elem.width == '400'\n    })\n    image.thumbnailUrl = smallerImage?.url ?? image.thumbnailUrl\n\n    this.storedImage.set(image)\n    this.storedAlt.set(alt)\n  }\n\n}\n","<dy-img [class.dy-border]=\"editMode()\" [alt]=\"altToDisplay()\" [attr.loading]=\"lazy() ? 'lazy' : 'eager'\" [image]=\"imageToDisplay()\"\n        [imgClass]=\"imgClass()\" [sizeRatio]=\"proportion()\"></dy-img>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {NgForOf, NgIf} from \"@angular/common\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n@Component({\n  selector: 'app-my-card',\n  standalone: true,\n  imports: [\n    NgForOf,\n    NgIf,\n    MatButtonModule\n  ],\n  templateUrl: './my-card.component.html',\n  styleUrl: './my-card.component.scss'\n})\nexport class MyCardComponent {\n  @Input({required: true}) title!: string;\n  @Input() withExitButton: boolean = false;\n  @Output() exitEmitter = new EventEmitter<boolean>;\n\n  exit() {\n    this.exitEmitter.next(true);\n  }\n}\n","<div *ngIf=\"withExitButton\" class=\"text-end\">\n  <button (click)=\"exit()\" color=\"accent\" mat-raised-button>X</button>\n</div>\n<section>\n  <h1>\n    <svg class=\"feather feather-tool\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n         stroke-width=\"2\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"/>\n    </svg>\n    {{ title }}\n  </h1>\n  <ng-content></ng-content>\n</section>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {CalendlyService} from \"../../service/calendly-service/calendly.service\";\n\n@Component({\n  selector: 'lib-calendly',\n  standalone: true,\n  imports: [],\n  templateUrl: './calendly.component.html',\n  styleUrl: './calendly.component.scss'\n})\nexport class CalendlyComponent implements OnInit {\n  @Input({required: true}) url!: string;\n\n  ngOnInit() {\n    CalendlyService.showEventEmitter.subscribe(x => {\n      if (x) {\n        this.show()\n      }\n    })\n  }\n\n  show(): void {\n    // @ts-ignore\n    Calendly.initPopupWidget({\n      url: this.url\n    })\n    /*\n    Calendly.initInlineWidget({\n      url: this.url,\n      parentElement: document.getElementById('calendly-embed')\n    });*/\n  }\n}\n","<link href=\"https://assets.calendly.com/assets/external/widget.css\" rel=\"stylesheet\">","// Angular\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n/**\n * Sanitize HTML\n */\n@Pipe({\n  name: 'safe',\n  standalone: true\n})\nexport class SafePipe implements PipeTransform {\n  /**\n   * Pipe Constructor\n   *\n   */\n  constructor(protected _sanitizer: DomSanitizer) {\n  }\n\n  /**\n   * Transform\n   *\n   */\n  transform(value: string, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this._sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this._sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this._sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n    }\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  standalone: true,\n  name: 'capitalizeFirstLetter'\n})\nexport class CapitalizeFirstLetterPipe implements PipeTransform {\n\n  transform(word: string): string {\n    if (!word) return word;\n    return word[0].toUpperCase() + word.substring(1);\n  }\n}\n","/*\n * Public API Surface of custom-display\n */\n\nexport * from './lib/directives/dy-translate.directive'\nexport * from './lib/directives/dy-image-edit.directive'\nexport * from './lib/directives/dy-transition.directive'\nexport * from './lib/lib/title/my-title-strategy'\nexport * from './lib/lib/enable-credentials-interceptor'\nexport * from './lib/service/translate/translation-client.service'\nexport * from './lib/service/user/user.service'\nexport * from './lib/service/swipe/swipe-manager.service'\nexport * from './lib/service/loading/loading.service'\nexport * from './lib/service/title/title.service'\nexport * from './lib/service/description-meta/description-meta.service'\nexport * from './lib/service/notifications/notification.service'\nexport * from './lib/service/change-colors-service/change-colors.service'\nexport * from './lib/service/calendly-service/calendly.service'\nexport * from './lib/service/dy-contact/dy-contact.service'\nexport * from './lib/service/local-storage/local-storage.service'\nexport * from './lib/service/dy-text-editor/dy-text-editor.service'\nexport * from './lib/entities/user'\n\nexport * from './lib/components/notification/notification.component'\nexport * from './lib/components/loading/loading.component'\n\nexport * from './lib/components/images/add-dyimage/add-dyimage.component'\nexport * from './lib/components/images/image-edit/image-edit.component'\nexport * from './lib/components/images/dy-swiper/dy-swiper.component'\nexport * from './lib/components/images/dy-picture/dy-picture.component'\nexport * from './lib/components/images/tag/dy-img/dy-img.component'\n\nexport * from './lib/components/my-card/my-card.component'\nexport * from './lib/components/calendly/calendly.component'\nexport * from './lib/model/images/upload-image-response'\nexport * from './lib/model/images/compressed-url'\nexport * from './lib/model/images/dy-image'\nexport * from './lib/service/image-upload/image-upload.service'\nexport * from './lib/pipes/safe-pipe.pipe'\nexport * from './lib/pipes/capitalize-first-letter.pipe'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.TranslationClientService","i2.DyTextEditorService","i1","i1.NotificationService","i1.ImageUploadService","i2","i3","i2.TranslationClientService","i2.ImageUploadService"],"mappings":"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"}