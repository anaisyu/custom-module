import { AfterViewInit, InputSignal, OnInit, Signal, WritableSignal } from '@angular/core';
import { UploadImageResponse } from "../../../model/images/upload-image-response";
import { TranslationClientService } from "../../../service/translate/translation-client.service";
import { ImageUploadService } from "../../../service/image-upload/image-upload.service";
import * as i0 from "@angular/core";
export declare class DyPictureComponent implements OnInit, AfterViewInit {
    private clientService;
    private imageUploadService;
    readonly originalSrc: InputSignal<string>;
    readonly originalAlt: InputSignal<string>;
    readonly key: InputSignal<string>;
    readonly imgClass: InputSignal<string>;
    readonly lazy: InputSignal<boolean>;
    readonly proportion: InputSignal<number>;
    private readonly storedImage;
    readonly imageToDisplay: Signal<UploadImageResponse>;
    private readonly storedAlt;
    readonly altToDisplay: Signal<string>;
    editMode: WritableSignal<boolean>;
    constructor(clientService: TranslationClientService, imageUploadService: ImageUploadService);
    ngAfterViewInit(): void;
    onKeyup(): void;
    save(response: UploadImageResponse, alt: string): void;
    ngOnInit(): void;
    changeImage(image: UploadImageResponse, alt: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DyPictureComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DyPictureComponent, "lib-dy-picture", never, { "originalSrc": { "alias": "originalSrc"; "required": true; "isSignal": true; }; "originalAlt": { "alias": "originalAlt"; "required": true; "isSignal": true; }; "key": { "alias": "key"; "required": true; "isSignal": true; }; "imgClass": { "alias": "imgClass"; "required": false; "isSignal": true; }; "lazy": { "alias": "lazy"; "required": false; "isSignal": true; }; "proportion": { "alias": "proportion"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
