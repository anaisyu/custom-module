import { Signal } from '@angular/core';
import { TranslateService } from "@ngx-translate/core";
import { HttpClient } from "@angular/common/http";
import { BehaviorSubject, Observable } from "rxjs";
import { NotificationService } from "../notifications/notification.service";
import { LocalStorageService } from "../local-storage/local-storage.service";
import * as i0 from "@angular/core";
export declare class TranslationClientService {
    private service;
    private notificationService;
    private http;
    private localStorageService;
    private backendUrl;
    readonly changes: Signal<Object>;
    editSubject: BehaviorSubject<boolean>;
    static readonly COOKIE_NAME = "site-text";
    constructor(service: TranslateService, notificationService: NotificationService, http: HttpClient, localStorageService: LocalStorageService, backendUrl: string);
    static merge(left: any, right: any): any;
    next(key: string, data: string): void;
    save(lang?: string): void;
    cancel(): void;
    private refresh;
    saveCookie(minutesExpire?: number): void;
    streamTranslation(key: string): Observable<string>;
    sync(lang?: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TranslationClientService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TranslationClientService>;
}
