import { ElementRef, Renderer2 } from '@angular/core';
import { BehaviorSubject, Subject } from "rxjs";
import { TranslationClientService } from "../translate/translation-client.service";
import { Observable } from 'rxjs/internal/Observable';
import * as i0 from "@angular/core";
export declare class ChangeColorsService {
    private clientService;
    cssVariableNames: string[];
    private cssVariables;
    private paletteCssVariables;
    cssVariablesSubject: Subject<{
        [key: string]: string;
    }>;
    paletteSubject: Subject<string[]>;
    displaySubject: BehaviorSubject<boolean>;
    private element?;
    private readonly ready1;
    private readonly ready2;
    ready: Observable<boolean>;
    constructor(clientService: TranslationClientService);
    getStylesFromCssFile(): void;
    registerElementRef(element: ElementRef): void;
    getStylesFromConfigFile(renderer: Renderer2): void;
    changeCssVariable(name: string, newValue: string, renderer: Renderer2): void;
    overrideCssProperties(renderer: Renderer2): void;
    save(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChangeColorsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ChangeColorsService>;
}
