import { Component, input } from '@angular/core';
import { AsyncPipe } from '@angular/common';
import { LoadingService } from "../../service/loading/loading.service";
import { MatProgressSpinnerModule } from "@angular/material/progress-spinner";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/progress-spinner";
export class LoadingComponent {
    constructor() {
        this.material = input(true);
        this.isLoading = LoadingService.isLoading();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: LoadingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.10", type: LoadingComponent, isStandalone: true, selector: "lib-loading", inputs: { material: { classPropertyName: "material", publicName: "material", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0, template: "@if (isLoading()) {\n  @if (material()) {\n    <mat-spinner class=\"loading-spinner\"></mat-spinner>\n  } @else {\n    <div class=\"loading-spinner spinner-border\" style=\"width: 5rem; height: 5rem; font-size: 2em;\"\n         role=\"status\">\n      <span class=\"visually-hidden\">Loading...</span>\n    </div>\n  }\n}\n", styles: [".loading-spinner{position:fixed!important;height:100px;width:100px;z-index:9999;top:50%;left:50%;margin-left:-50px;margin-top:-50px}\n"], dependencies: [{ kind: "ngmodule", type: MatProgressSpinnerModule }, { kind: "component", type: i1.MatProgressSpinner, selector: "mat-progress-spinner, mat-spinner", inputs: ["color", "mode", "value", "diameter", "strokeWidth"], exportAs: ["matProgressSpinner"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: LoadingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-loading', standalone: true, imports: [MatProgressSpinnerModule, AsyncPipe], template: "@if (isLoading()) {\n  @if (material()) {\n    <mat-spinner class=\"loading-spinner\"></mat-spinner>\n  } @else {\n    <div class=\"loading-spinner spinner-border\" style=\"width: 5rem; height: 5rem; font-size: 2em;\"\n         role=\"status\">\n      <span class=\"visually-hidden\">Loading...</span>\n    </div>\n  }\n}\n", styles: [".loading-spinner{position:fixed!important;height:100px;width:100px;z-index:9999;top:50%;left:50%;margin-left:-50px;margin-top:-50px}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jdXN0b20tZGlzcGxheS9zcmMvbGliL2NvbXBvbmVudHMvbG9hZGluZy9sb2FkaW5nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2N1c3RvbS1kaXNwbGF5L3NyYy9saWIvY29tcG9uZW50cy9sb2FkaW5nL2xvYWRpbmcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUMxQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDckUsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sb0NBQW9DLENBQUM7OztBQVM1RSxNQUFNLE9BQU8sZ0JBQWdCO0lBSTNCO1FBSEEsYUFBUSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUlyQixJQUFJLENBQUMsU0FBUyxHQUFHLGNBQWMsQ0FBQyxTQUFTLEVBQUUsQ0FBQTtJQUM3QyxDQUFDOytHQU5VLGdCQUFnQjttR0FBaEIsZ0JBQWdCLG9OQ1o3QixxVUFVQSwrTERGWSx3QkFBd0I7OzRGQUl2QixnQkFBZ0I7a0JBUDVCLFNBQVM7K0JBQ0UsYUFBYSxjQUNYLElBQUksV0FDUCxDQUFDLHdCQUF3QixFQUFFLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBpbnB1dCwgSW5wdXQsIFNpZ25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0FzeW5jUGlwZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7TG9hZGluZ1NlcnZpY2V9IGZyb20gXCIuLi8uLi9zZXJ2aWNlL2xvYWRpbmcvbG9hZGluZy5zZXJ2aWNlXCI7XG5pbXBvcnQge01hdFByb2dyZXNzU3Bpbm5lck1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXJcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWxvYWRpbmcnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTWF0UHJvZ3Jlc3NTcGlubmVyTW9kdWxlLCBBc3luY1BpcGVdLFxuICB0ZW1wbGF0ZVVybDogJy4vbG9hZGluZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsOiAnLi9sb2FkaW5nLmNvbXBvbmVudC5jc3MnXG59KVxuZXhwb3J0IGNsYXNzIExvYWRpbmdDb21wb25lbnQge1xuICBtYXRlcmlhbCA9IGlucHV0KHRydWUpO1xuICBpc0xvYWRpbmc6IFNpZ25hbDxib29sZWFuPjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmlzTG9hZGluZyA9IExvYWRpbmdTZXJ2aWNlLmlzTG9hZGluZygpXG4gIH1cbn1cbiIsIkBpZiAoaXNMb2FkaW5nKCkpIHtcbiAgQGlmIChtYXRlcmlhbCgpKSB7XG4gICAgPG1hdC1zcGlubmVyIGNsYXNzPVwibG9hZGluZy1zcGlubmVyXCI+PC9tYXQtc3Bpbm5lcj5cbiAgfSBAZWxzZSB7XG4gICAgPGRpdiBjbGFzcz1cImxvYWRpbmctc3Bpbm5lciBzcGlubmVyLWJvcmRlclwiIHN0eWxlPVwid2lkdGg6IDVyZW07IGhlaWdodDogNXJlbTsgZm9udC1zaXplOiAyZW07XCJcbiAgICAgICAgIHJvbGU9XCJzdGF0dXNcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwidmlzdWFsbHktaGlkZGVuXCI+TG9hZGluZy4uLjwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgfVxufVxuIl19