import { Component } from '@angular/core';
import { NgIf } from "@angular/common";
import { DyTranslateDirective } from "../../directives/dy-translate.directive";
import * as i0 from "@angular/core";
import * as i1 from "../../service/notifications/notification.service";
export class NotificationComponent {
    constructor(service) {
        this.service = service;
        this.show = false;
        this.error = false;
        this.message = '';
        this.timeout = -1;
        this.service.successMessage.subscribe((msg) => {
            this.message = msg;
            this.show = true;
            this.error = false;
            this.prepareStop();
        });
        this.service.errorMessage.subscribe((msg) => {
            this.message = msg;
            this.show = true;
            this.error = true;
            this.prepareStop();
        });
    }
    prepareStop() {
        clearTimeout(this.timeout);
        this.timeout = setTimeout(() => {
            console.log('end');
            this.show = false;
        }, 8000);
    }
    stop() {
        this.show = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: NotificationComponent, deps: [{ token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.10", type: NotificationComponent, isStandalone: true, selector: "app-notification", ngImport: i0, template: "<div *ngIf=\"show\" [class.show]=\"show\" aria-atomic=\"true\" aria-live=\"assertive\" class=\"toast\" role=\"alert\">\n  <div class=\"toast-header\">\n    <strong *ngIf=\"!error\" [appDyTranslate]=\"'notification.successHeader'\" class=\"me-auto\">Notification</strong>\n    <strong *ngIf=\"error\" [appDyTranslate]=\"'notification.errorHeader'\" class=\"me-auto\">Error</strong>\n    <button (click)=\"stop()\" aria-label=\"Close\" class=\"btn-close\" data-bs-dismiss=\"toast\" type=\"button\"></button>\n  </div>\n  <div class=\"toast-body\">\n    {{ message }}\n  </div>\n</div>\n", styles: [".toast{display:block;position:fixed;top:50%;left:50%;margin-left:-150px;margin-top:-50px;z-index:999}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: DyTranslateDirective, selector: "[appDyTranslate]", inputs: ["appDyTranslate"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: NotificationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-notification', standalone: true, imports: [
                        NgIf,
                        DyTranslateDirective
                    ], template: "<div *ngIf=\"show\" [class.show]=\"show\" aria-atomic=\"true\" aria-live=\"assertive\" class=\"toast\" role=\"alert\">\n  <div class=\"toast-header\">\n    <strong *ngIf=\"!error\" [appDyTranslate]=\"'notification.successHeader'\" class=\"me-auto\">Notification</strong>\n    <strong *ngIf=\"error\" [appDyTranslate]=\"'notification.errorHeader'\" class=\"me-auto\">Error</strong>\n    <button (click)=\"stop()\" aria-label=\"Close\" class=\"btn-close\" data-bs-dismiss=\"toast\" type=\"button\"></button>\n  </div>\n  <div class=\"toast-body\">\n    {{ message }}\n  </div>\n</div>\n", styles: [".toast{display:block;position:fixed;top:50%;left:50%;margin-left:-150px;margin-top:-50px;z-index:999}\n"] }]
        }], ctorParameters: () => [{ type: i1.NotificationService }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2N1c3RvbS1kaXNwbGF5L3NyYy9saWIvY29tcG9uZW50cy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2N1c3RvbS1kaXNwbGF5L3NyYy9saWIvY29tcG9uZW50cy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFeEMsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3JDLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLHlDQUF5QyxDQUFDOzs7QUFZN0UsTUFBTSxPQUFPLHFCQUFxQjtJQU9oQyxZQUFvQixPQUE0QjtRQUE1QixZQUFPLEdBQVAsT0FBTyxDQUFxQjtRQU5oRCxTQUFJLEdBQVksS0FBSyxDQUFDO1FBQ3RCLFVBQUssR0FBWSxLQUFLLENBQUM7UUFDdkIsWUFBTyxHQUFXLEVBQUUsQ0FBQztRQUViLFlBQU8sR0FBVyxDQUFDLENBQUMsQ0FBQztRQUczQixJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztZQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztZQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNuQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUE7UUFDcEIsQ0FBQyxDQUFDLENBQUE7UUFDRixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUMxQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztZQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztZQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztZQUNsQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUE7UUFDcEIsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsV0FBVztRQUNULFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUE7WUFDbEIsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFDcEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDOytHQWhDVSxxQkFBcUI7bUdBQXJCLHFCQUFxQiw0RUNmbEMsMGtCQVVBLGlLREFJLElBQUksNkZBQ0osb0JBQW9COzs0RkFJWCxxQkFBcUI7a0JBVmpDLFNBQVM7K0JBQ0Usa0JBQWtCLGNBQ2hCLElBQUksV0FFUDt3QkFDUCxJQUFJO3dCQUNKLG9CQUFvQjtxQkFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05vdGlmaWNhdGlvblNlcnZpY2V9IGZyb20gXCIuLi8uLi9zZXJ2aWNlL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9uLnNlcnZpY2VcIjtcbmltcG9ydCB7TmdJZn0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuaW1wb3J0IHtEeVRyYW5zbGF0ZURpcmVjdGl2ZX0gZnJvbSBcIi4uLy4uL2RpcmVjdGl2ZXMvZHktdHJhbnNsYXRlLmRpcmVjdGl2ZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtbm90aWZpY2F0aW9uJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgdGVtcGxhdGVVcmw6ICcuL25vdGlmaWNhdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIGltcG9ydHM6IFtcbiAgICBOZ0lmLFxuICAgIER5VHJhbnNsYXRlRGlyZWN0aXZlXG4gIF0sXG4gIHN0eWxlVXJsczogWycuL25vdGlmaWNhdGlvbi5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uQ29tcG9uZW50IHtcbiAgc2hvdzogYm9vbGVhbiA9IGZhbHNlO1xuICBlcnJvcjogYm9vbGVhbiA9IGZhbHNlO1xuICBtZXNzYWdlOiBzdHJpbmcgPSAnJztcblxuICBwcml2YXRlIHRpbWVvdXQ6IG51bWJlciA9IC0xO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VydmljZTogTm90aWZpY2F0aW9uU2VydmljZSkge1xuICAgIHRoaXMuc2VydmljZS5zdWNjZXNzTWVzc2FnZS5zdWJzY3JpYmUoKG1zZykgPT4ge1xuICAgICAgdGhpcy5tZXNzYWdlID0gbXNnO1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTtcbiAgICAgIHRoaXMucHJlcGFyZVN0b3AoKVxuICAgIH0pXG4gICAgdGhpcy5zZXJ2aWNlLmVycm9yTWVzc2FnZS5zdWJzY3JpYmUoKG1zZykgPT4ge1xuICAgICAgdGhpcy5tZXNzYWdlID0gbXNnO1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuZXJyb3IgPSB0cnVlO1xuICAgICAgdGhpcy5wcmVwYXJlU3RvcCgpXG4gICAgfSlcbiAgfVxuXG4gIHByZXBhcmVTdG9wKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpO1xuICAgIHRoaXMudGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ2VuZCcpXG4gICAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgICB9LCA4MDAwKTtcbiAgfVxuXG4gIHN0b3AoKSB7XG4gICAgdGhpcy5zaG93ID0gZmFsc2U7XG4gIH1cbn1cbiIsIjxkaXYgKm5nSWY9XCJzaG93XCIgW2NsYXNzLnNob3ddPVwic2hvd1wiIGFyaWEtYXRvbWljPVwidHJ1ZVwiIGFyaWEtbGl2ZT1cImFzc2VydGl2ZVwiIGNsYXNzPVwidG9hc3RcIiByb2xlPVwiYWxlcnRcIj5cbiAgPGRpdiBjbGFzcz1cInRvYXN0LWhlYWRlclwiPlxuICAgIDxzdHJvbmcgKm5nSWY9XCIhZXJyb3JcIiBbYXBwRHlUcmFuc2xhdGVdPVwiJ25vdGlmaWNhdGlvbi5zdWNjZXNzSGVhZGVyJ1wiIGNsYXNzPVwibWUtYXV0b1wiPk5vdGlmaWNhdGlvbjwvc3Ryb25nPlxuICAgIDxzdHJvbmcgKm5nSWY9XCJlcnJvclwiIFthcHBEeVRyYW5zbGF0ZV09XCInbm90aWZpY2F0aW9uLmVycm9ySGVhZGVyJ1wiIGNsYXNzPVwibWUtYXV0b1wiPkVycm9yPC9zdHJvbmc+XG4gICAgPGJ1dHRvbiAoY2xpY2spPVwic3RvcCgpXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCIgY2xhc3M9XCJidG4tY2xvc2VcIiBkYXRhLWJzLWRpc21pc3M9XCJ0b2FzdFwiIHR5cGU9XCJidXR0b25cIj48L2J1dHRvbj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJ0b2FzdC1ib2R5XCI+XG4gICAge3sgbWVzc2FnZSB9fVxuICA8L2Rpdj5cbjwvZGl2PlxuIl19