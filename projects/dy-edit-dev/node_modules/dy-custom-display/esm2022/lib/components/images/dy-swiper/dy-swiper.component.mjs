import { Component, computed, Inject, input, PLATFORM_ID, signal } from '@angular/core';
import { isPlatformBrowser, NgForOf, NgIf } from "@angular/common";
import PhotoSwipeLightbox from "photoswipe/lightbox";
import PhotoSwipe from "photoswipe";
// import Swiper bundle with all modules installed
// @ts-ignore
import Swiper from 'swiper/bundle';
import { DyTransitionDirective } from "../../../directives/dy-transition.directive";
import { DyImgComponent } from "../tag/dy-img/dy-img.component";
import { MatIcon } from "@angular/material/icon";
import * as i0 from "@angular/core";
export class DySwiperComponent {
    constructor(_platformId) {
        this._platformId = _platformId;
        this.active_id = -1;
        this.pictures = input.required();
        this.id = input('swiper');
        this.noGallery = input(false);
        this.withGallery = computed(() => this.noGallery() ? false : this.pictures() ? this.pictures().length > 1 : false);
        this.slidesPerView = input(1);
        this.spaceBetween = input(0);
        this.themeColor = input('#646464');
        this.margin_x = input(5);
        this.transition = input('none');
        this.sizes = computed(() => {
            const map = new Map();
            this.pictures().forEach(pic => {
                map.set(pic.originalUrl, { height: signal(0), width: signal(0) });
            });
            return map;
        });
    }
    goto(id) {
        this.swiper.slideToLoop(id);
    }
    getThumbnailHeight(pictures) {
        return Math.min(100 / pictures.length, 33);
    }
    ngOnDestroy() {
        this.lightbox?.destroy();
        this.swiper?.destroy();
    }
    ngOnChanges(changes) {
        if (changes['pictures'] && changes['pictures'].previousValue) {
            // Check if inputChangeTrigger has changed
            // You can add more conditions based on your requirements
            this.ngOnDestroy();
            this.ngAfterViewInit();
        }
    }
    ngAfterViewInit() {
        if (isPlatformBrowser(this._platformId)) {
            this.swiper = new Swiper(`#${this.id()}`, {
                // Optional parameters
                loop: true,
                keyboard: {
                    enabled: true,
                    onlyInViewport: false,
                },
                // If we need pagination
                pagination: {
                    el: '.swiper-pagination',
                },
                // Navigation arrows
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                // Responsive breakpoints
                breakpoints: {
                    // when window width is >= 640px
                    640: {
                        navigation: {
                            nextEl: '.swiper-button-next-dy' + this.id(),
                            prevEl: '.swiper-button-prev-dy' + this.id(),
                        },
                        spaceBetween: this.spaceBetween(),
                        slidesPerView: this.slidesPerView(), // or 4 depending on your preference
                    },
                    // you can add more breakpoints if needed
                },
                // And if we need scrollbar
                scrollbar: {
                    hide: true,
                },
                on: {
                    slideChangeTransitionEnd: (swiper) => {
                        console.log(swiper.realIndex);
                        this.changeActiveIndex(swiper.realIndex);
                    }
                }
            });
            setTimeout(() => {
                this.lightbox = new PhotoSwipeLightbox({
                    gallery: `#${this.id()}`,
                    children: 'a',
                    pswpModule: PhotoSwipe,
                    zoom: true
                });
                this.lightbox.init();
            }, 100);
        }
    }
    changeActiveIndex(index) {
        this.active_id = index;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: DySwiperComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.10", type: DySwiperComponent, isStandalone: true, selector: "app-dy-swiper", inputs: { pictures: { classPropertyName: "pictures", publicName: "pictures", isSignal: true, isRequired: true, transformFunction: null }, id: { classPropertyName: "id", publicName: "id", isSignal: true, isRequired: false, transformFunction: null }, noGallery: { classPropertyName: "noGallery", publicName: "noGallery", isSignal: true, isRequired: false, transformFunction: null }, slidesPerView: { classPropertyName: "slidesPerView", publicName: "slidesPerView", isSignal: true, isRequired: false, transformFunction: null }, spaceBetween: { classPropertyName: "spaceBetween", publicName: "spaceBetween", isSignal: true, isRequired: false, transformFunction: null }, themeColor: { classPropertyName: "themeColor", publicName: "themeColor", isSignal: true, isRequired: false, transformFunction: null }, margin_x: { classPropertyName: "margin_x", publicName: "margin_x", isSignal: true, isRequired: false, transformFunction: null }, transition: { classPropertyName: "transition", publicName: "transition", isSignal: true, isRequired: false, transformFunction: null } }, usesOnChanges: true, ngImport: i0, template: "<div [class.col-md-10]=\"withGallery()\" [class.col-md-12]=\"!withGallery()\" [style.--swiper-theme-color]=\"themeColor()\">\n  <div style=\"display: flex; align-items: center;\">\n    <div class=\"dy-arrow text-center\">\n      <mat-icon [class]=\"'swiper-button-prev-dy' + id()\" class=\"!w-full\" [inline]=\"true\"\n                style=\"font-size: 4rem; color: var(--dy-primary)\">chevron_left\n      </mat-icon>\n    </div>\n    <div class=\"dy-main\">\n      <div [id]=\"id()\" class=\"swiper\">\n        <!-- Additional required wrapper -->\n        <div class=\"swiper-wrapper\">\n          @for (picture of pictures(); track picture.originalUrl) {\n\n            <div class=\"swiper-slide\" id=\"{{ picture.originalUrl }}\">\n              <div class=\"picsum-img-wrapper\"\n              >\n                <div\n                  [style.padding-left]=\"margin_x() + '%'\"\n                  [style.padding-right]=\"margin_x() + '%'\"\n                >\n                  <a style=\"width: 100%\" [href]=\"picture.originalUrl\"\n                     [attr.data-pswp-width]=\"sizes().get(picture.originalUrl)!.width()*this.slidesPerView()\"\n                     [attr.data-pswp-height]=\"sizes().get(picture.originalUrl)!.height()*this.slidesPerView()\"\n                     class=\"img-link\" target=\"_blank\">\n                    <dy-img [imgStyle]=\"'width: 100%; height: auto;'\" [sizeRatio]=\"100/this.slidesPerView()\" [image]=\"picture\"\n                            [alt]=\"picture.alt ?? 'swiper image'\" [transitionName]=\"$first ? transition() : 'none'\"\n                            [(height)]=\"sizes().get(picture.originalUrl)!.height\"\n                            [(width)]=\"sizes().get(picture.originalUrl)!.width\"></dy-img>\n                  </a>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n        <div class=\"swiper-pagination\"></div>\n\n        <div class=\"swiper-button-prev\"></div>\n        <div class=\"swiper-button-next\"></div>\n      </div>\n    </div>\n    <div class=\"text-center dy-arrow\">\n      <mat-icon [class]=\"'swiper-button-next-dy' + id()\" class=\"text-primary-inverse !w-full\" [inline]=\"true\"\n                style=\"font-size: 4rem; color: var(--dy-primary)\">chevron_right\n      </mat-icon>\n    </div>\n  </div>\n  <div *ngIf=\"withGallery()\" class=\"row\">\n    <div class=\"hidden md:block col-md-2 position-relative\">\n      <div id=\"image-list-detail\">\n        <div class=\"ab\">\n          <ng-container *ngFor=\"let picture of pictures(); let i = index\">\n            <img (click)=\"goto(i)\"\n                 [class.ab_active]=\"i == active_id\"\n                 [src]=\"picture.thumbnailUrl\"\n                 [style.height]=\"getThumbnailHeight(pictures()) + '%'\"\n                 [style.width]=\"getThumbnailHeight(pictures()) + '%'\"\n                 alt=\"thumbnail\"\n                 class=\"cd\"\n            />\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", styles: [".swiper{width:100%;height:auto}img{display:block;margin:auto;max-width:100%!important}#image-list-detail{height:100%;position:absolute;text-align:left;margin-left:0;margin-right:auto;display:flex;justify-content:flex-end}.ab{display:inline-block;height:100%;margin-left:auto!important;margin-right:0!important}.cd{display:block;padding:3px;margin-left:0;margin-right:auto;object-fit:cover;aspect-ratio:297/210}@media (min-width: 576px){.cd{width:auto!important}}@media (max-width: 576px){img{width:100%!important;margin:unset!important}.swiper{width:100%!important}.cd{display:inline;height:auto!important}#image-list-detail{height:fit-content!important}}.ab_active{padding:2px;border:rgb(215,224,243) solid 2px}::ng-deep .pswp__button{width:5rem!important;height:5.5rem!important}::ng-deep .pswp__icn{width:4rem!important;height:4rem!important}.img-link{display:block;width:fit-content;margin:auto}.material-symbols-outlined{font-size:4rem}@media (min-width: 768px){.dy-arrow{width:4rem;color:var(--dy-primary)}.dy-main{width:calc(100% - 8rem)}}@media (max-width: 768px){.dy-arrow{display:none;width:0;color:var(--dy-primary)}.dy-main{width:100%}}.swiper-button-next,.swiper-button-prev{display:block}@media (min-width: 768px){.swiper-button-next,.swiper-button-prev{display:none}}\n"], dependencies: [{ kind: "directive", type: NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: DyImgComponent, selector: "dy-img", inputs: ["imgClass", "imgStyle", "image", "alt", "transitionName", "sizeRatio", "height", "width"], outputs: ["heightChange", "widthChange"] }, { kind: "component", type: MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: DySwiperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-dy-swiper', standalone: true, imports: [
                        NgForOf,
                        NgIf,
                        DyTransitionDirective,
                        DyImgComponent,
                        MatIcon
                    ], template: "<div [class.col-md-10]=\"withGallery()\" [class.col-md-12]=\"!withGallery()\" [style.--swiper-theme-color]=\"themeColor()\">\n  <div style=\"display: flex; align-items: center;\">\n    <div class=\"dy-arrow text-center\">\n      <mat-icon [class]=\"'swiper-button-prev-dy' + id()\" class=\"!w-full\" [inline]=\"true\"\n                style=\"font-size: 4rem; color: var(--dy-primary)\">chevron_left\n      </mat-icon>\n    </div>\n    <div class=\"dy-main\">\n      <div [id]=\"id()\" class=\"swiper\">\n        <!-- Additional required wrapper -->\n        <div class=\"swiper-wrapper\">\n          @for (picture of pictures(); track picture.originalUrl) {\n\n            <div class=\"swiper-slide\" id=\"{{ picture.originalUrl }}\">\n              <div class=\"picsum-img-wrapper\"\n              >\n                <div\n                  [style.padding-left]=\"margin_x() + '%'\"\n                  [style.padding-right]=\"margin_x() + '%'\"\n                >\n                  <a style=\"width: 100%\" [href]=\"picture.originalUrl\"\n                     [attr.data-pswp-width]=\"sizes().get(picture.originalUrl)!.width()*this.slidesPerView()\"\n                     [attr.data-pswp-height]=\"sizes().get(picture.originalUrl)!.height()*this.slidesPerView()\"\n                     class=\"img-link\" target=\"_blank\">\n                    <dy-img [imgStyle]=\"'width: 100%; height: auto;'\" [sizeRatio]=\"100/this.slidesPerView()\" [image]=\"picture\"\n                            [alt]=\"picture.alt ?? 'swiper image'\" [transitionName]=\"$first ? transition() : 'none'\"\n                            [(height)]=\"sizes().get(picture.originalUrl)!.height\"\n                            [(width)]=\"sizes().get(picture.originalUrl)!.width\"></dy-img>\n                  </a>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n        <div class=\"swiper-pagination\"></div>\n\n        <div class=\"swiper-button-prev\"></div>\n        <div class=\"swiper-button-next\"></div>\n      </div>\n    </div>\n    <div class=\"text-center dy-arrow\">\n      <mat-icon [class]=\"'swiper-button-next-dy' + id()\" class=\"text-primary-inverse !w-full\" [inline]=\"true\"\n                style=\"font-size: 4rem; color: var(--dy-primary)\">chevron_right\n      </mat-icon>\n    </div>\n  </div>\n  <div *ngIf=\"withGallery()\" class=\"row\">\n    <div class=\"hidden md:block col-md-2 position-relative\">\n      <div id=\"image-list-detail\">\n        <div class=\"ab\">\n          <ng-container *ngFor=\"let picture of pictures(); let i = index\">\n            <img (click)=\"goto(i)\"\n                 [class.ab_active]=\"i == active_id\"\n                 [src]=\"picture.thumbnailUrl\"\n                 [style.height]=\"getThumbnailHeight(pictures()) + '%'\"\n                 [style.width]=\"getThumbnailHeight(pictures()) + '%'\"\n                 alt=\"thumbnail\"\n                 class=\"cd\"\n            />\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", styles: [".swiper{width:100%;height:auto}img{display:block;margin:auto;max-width:100%!important}#image-list-detail{height:100%;position:absolute;text-align:left;margin-left:0;margin-right:auto;display:flex;justify-content:flex-end}.ab{display:inline-block;height:100%;margin-left:auto!important;margin-right:0!important}.cd{display:block;padding:3px;margin-left:0;margin-right:auto;object-fit:cover;aspect-ratio:297/210}@media (min-width: 576px){.cd{width:auto!important}}@media (max-width: 576px){img{width:100%!important;margin:unset!important}.swiper{width:100%!important}.cd{display:inline;height:auto!important}#image-list-detail{height:fit-content!important}}.ab_active{padding:2px;border:rgb(215,224,243) solid 2px}::ng-deep .pswp__button{width:5rem!important;height:5.5rem!important}::ng-deep .pswp__icn{width:4rem!important;height:4rem!important}.img-link{display:block;width:fit-content;margin:auto}.material-symbols-outlined{font-size:4rem}@media (min-width: 768px){.dy-arrow{width:4rem;color:var(--dy-primary)}.dy-main{width:calc(100% - 8rem)}}@media (max-width: 768px){.dy-arrow{display:none;width:0;color:var(--dy-primary)}.dy-main{width:100%}}.swiper-button-next,.swiper-button-prev{display:block}@media (min-width: 768px){.swiper-button-next,.swiper-button-prev{display:none}}\n"] }]
        }], ctorParameters: () => [{ type: Object, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }] });
//# sourceMappingURL=data:application/json;base64,