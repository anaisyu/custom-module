import { Component, EventEmitter, Output } from '@angular/core';
import { ReactiveFormsModule } from "@angular/forms";
import { MatDialogModule } from "@angular/material/dialog";
import { MatButtonModule } from "@angular/material/button";
import { MatIconModule } from "@angular/material/icon";
import * as i0 from "@angular/core";
import * as i1 from "../../../service/image-upload/image-upload.service";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/icon";
export class AddDyimageComponent {
    constructor(service) {
        this.service = service;
        this.image = new EventEmitter();
    }
    openDialog() {
        this.service.openDialog().subscribe({
            next: output => {
                this.image.emit(output);
            },
            error: (err) => {
                console.log('error with uploading image');
                console.log(err);
            }
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: AddDyimageComponent, deps: [{ token: i1.ImageUploadService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.10", type: AddDyimageComponent, isStandalone: true, selector: "lib-add-dyimage", outputs: { image: "image" }, ngImport: i0, template: "<div>\n  <button (click)=\"openDialog()\" mat-raised-button>\n    <mat-icon fontIcon=\"add_circle\"></mat-icon>\n    Rajouter une nouvelle image\n  </button>\n</div>\n", styles: [""], dependencies: [{ kind: "ngmodule", type: ReactiveFormsModule }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatDialogModule }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: AddDyimageComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-add-dyimage', standalone: true, imports: [
                        ReactiveFormsModule,
                        MatButtonModule, MatDialogModule, MatIconModule,
                    ], template: "<div>\n  <button (click)=\"openDialog()\" mat-raised-button>\n    <mat-icon fontIcon=\"add_circle\"></mat-icon>\n    Rajouter une nouvelle image\n  </button>\n</div>\n" }]
        }], ctorParameters: () => [{ type: i1.ImageUploadService }], propDecorators: { image: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWR5aW1hZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY3VzdG9tLWRpc3BsYXkvc3JjL2xpYi9jb21wb25lbnRzL2ltYWdlcy9hZGQtZHlpbWFnZS9hZGQtZHlpbWFnZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jdXN0b20tZGlzcGxheS9zcmMvbGliL2NvbXBvbmVudHMvaW1hZ2VzL2FkZC1keWltYWdlL2FkZC1keWltYWdlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7QUFjckQsTUFBTSxPQUFPLG1CQUFtQjtJQU05QixZQUFvQixPQUEyQjtRQUEzQixZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQUxyQyxVQUFLLEdBQTZELElBQUksWUFBWSxFQUd4RixDQUFDO0lBR0wsQ0FBQztJQUVELFVBQVU7UUFDUixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FDakM7WUFDRSxJQUFJLEVBQUUsTUFBTSxDQUFDLEVBQUU7Z0JBQ2IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDekIsQ0FBQztZQUNELEtBQUssRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLENBQUMsQ0FBQTtnQkFDekMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUNsQixDQUFDO1NBQ0YsQ0FBQyxDQUFBO0lBQ04sQ0FBQzsrR0FwQlUsbUJBQW1CO21HQUFuQixtQkFBbUIsd0dDbEJoQyx5S0FNQSx5RERNSSxtQkFBbUIsOEJBQ25CLGVBQWUsMk5BQUUsZUFBZSw4QkFBRSxhQUFhOzs0RkFLdEMsbUJBQW1CO2tCQVYvQixTQUFTOytCQUNFLGlCQUFpQixjQUNmLElBQUksV0FDUDt3QkFDUCxtQkFBbUI7d0JBQ25CLGVBQWUsRUFBRSxlQUFlLEVBQUUsYUFBYTtxQkFDaEQ7dUZBS1MsS0FBSztzQkFBZCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UmVhY3RpdmVGb3Jtc01vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQge01hdERpYWxvZ01vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2RpYWxvZ1wiO1xuaW1wb3J0IHtNYXRCdXR0b25Nb2R1bGV9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9idXR0b25cIjtcbmltcG9ydCB7TWF0SWNvbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2ljb25cIjtcbmltcG9ydCB7SW1hZ2VVcGxvYWRTZXJ2aWNlfSBmcm9tIFwiLi4vLi4vLi4vc2VydmljZS9pbWFnZS11cGxvYWQvaW1hZ2UtdXBsb2FkLnNlcnZpY2VcIjtcbmltcG9ydCB7VXBsb2FkSW1hZ2VSZXNwb25zZX0gZnJvbSBcIi4uLy4uLy4uL21vZGVsL2ltYWdlcy91cGxvYWQtaW1hZ2UtcmVzcG9uc2VcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWFkZC1keWltYWdlJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgTWF0QnV0dG9uTW9kdWxlLCBNYXREaWFsb2dNb2R1bGUsIE1hdEljb25Nb2R1bGUsXG4gIF0sXG4gIHRlbXBsYXRlVXJsOiAnLi9hZGQtZHlpbWFnZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2FkZC1keWltYWdlLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBBZGREeWltYWdlQ29tcG9uZW50IHtcbiAgQE91dHB1dCgpIGltYWdlOiBFdmVudEVtaXR0ZXI8eyBhbHQ6IHN0cmluZywgdXJsczogVXBsb2FkSW1hZ2VSZXNwb25zZSB9PiA9IG5ldyBFdmVudEVtaXR0ZXI8e1xuICAgIGFsdDogc3RyaW5nLFxuICAgIHVybHM6IFVwbG9hZEltYWdlUmVzcG9uc2VcbiAgfT4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcnZpY2U6IEltYWdlVXBsb2FkU2VydmljZSkge1xuICB9XG5cbiAgb3BlbkRpYWxvZygpIHtcbiAgICB0aGlzLnNlcnZpY2Uub3BlbkRpYWxvZygpLnN1YnNjcmliZShcbiAgICAgIHtcbiAgICAgICAgbmV4dDogb3V0cHV0ID0+IHtcbiAgICAgICAgICB0aGlzLmltYWdlLmVtaXQob3V0cHV0KVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogKGVycikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciB3aXRoIHVwbG9hZGluZyBpbWFnZScpXG4gICAgICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgICB9XG4gICAgICB9KVxuICB9XG59XG4iLCI8ZGl2PlxuICA8YnV0dG9uIChjbGljayk9XCJvcGVuRGlhbG9nKClcIiBtYXQtcmFpc2VkLWJ1dHRvbj5cbiAgICA8bWF0LWljb24gZm9udEljb249XCJhZGRfY2lyY2xlXCI+PC9tYXQtaWNvbj5cbiAgICBSYWpvdXRlciB1bmUgbm91dmVsbGUgaW1hZ2VcbiAgPC9idXR0b24+XG48L2Rpdj5cbiJdfQ==