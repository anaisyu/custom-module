import { Injectable } from '@angular/core';
import { Subject } from "rxjs";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/snack-bar";
export class NotificationService {
    constructor(_snackBar) {
        this._snackBar = _snackBar;
        this._successMessage = new Subject();
        this._errorMessage = new Subject();
    }
    get successMessage() {
        return this._successMessage;
    }
    get errorMessage() {
        return this._errorMessage;
    }
    newMessage(message, snack = false) {
        if (snack) {
            this._snackBar.open(message, 'Fermer', { duration: 5000 });
        }
        this._successMessage.next(message);
    }
    newError(message, snack = false) {
        if (snack) {
            this._snackBar.open(message, 'Fermer', {
                duration: 60 * 1000,
                panelClass: 'error'
            });
        }
        this._errorMessage.next(message);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: NotificationService, deps: [{ token: i1.MatSnackBar }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: NotificationService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: NotificationService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: () => [{ type: i1.MatSnackBar }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jdXN0b20tZGlzcGxheS9zcmMvbGliL3NlcnZpY2Uvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxNQUFNLENBQUM7OztBQU03QixNQUFNLE9BQU8sbUJBQW1CO0lBQzlCLFlBQW9CLFNBQXNCO1FBQXRCLGNBQVMsR0FBVCxTQUFTLENBQWE7UUFHbEMsb0JBQWUsR0FBb0IsSUFBSSxPQUFPLEVBQVUsQ0FBQztRQU16RCxrQkFBYSxHQUFvQixJQUFJLE9BQU8sRUFBVSxDQUFDO0lBUi9ELENBQUM7SUFJRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7SUFJRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDNUIsQ0FBQztJQUVELFVBQVUsQ0FBQyxPQUFlLEVBQUUsUUFBaUIsS0FBSztRQUNoRCxJQUFHLEtBQUssRUFBRTtZQUNSLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQTtTQUN6RDtRQUNELElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxRQUFRLENBQUMsT0FBZSxFQUFFLFFBQWlCLEtBQUs7UUFDOUMsSUFBRyxLQUFLLEVBQUU7WUFDUixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFO2dCQUNyQyxRQUFRLEVBQUUsRUFBRSxHQUFHLElBQUk7Z0JBQ25CLFVBQVUsRUFBRSxPQUFPO2FBQ3BCLENBQUMsQ0FBQTtTQUNIO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbkMsQ0FBQzsrR0EvQlUsbUJBQW1CO21IQUFuQixtQkFBbUIsY0FGbEIsTUFBTTs7NEZBRVAsbUJBQW1CO2tCQUgvQixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1N1YmplY3R9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQge01hdFNuYWNrQmFyfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvc25hY2stYmFyXCI7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvblNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zbmFja0JhcjogTWF0U25hY2tCYXIpIHtcbiAgfVxuXG4gIHByaXZhdGUgX3N1Y2Nlc3NNZXNzYWdlOiBTdWJqZWN0PHN0cmluZz4gPSBuZXcgU3ViamVjdDxzdHJpbmc+KCk7XG5cbiAgZ2V0IHN1Y2Nlc3NNZXNzYWdlKCk6IFN1YmplY3Q8c3RyaW5nPiB7XG4gICAgcmV0dXJuIHRoaXMuX3N1Y2Nlc3NNZXNzYWdlO1xuICB9XG5cbiAgcHJpdmF0ZSBfZXJyb3JNZXNzYWdlOiBTdWJqZWN0PHN0cmluZz4gPSBuZXcgU3ViamVjdDxzdHJpbmc+KCk7XG5cbiAgZ2V0IGVycm9yTWVzc2FnZSgpOiBTdWJqZWN0PHN0cmluZz4ge1xuICAgIHJldHVybiB0aGlzLl9lcnJvck1lc3NhZ2U7XG4gIH1cblxuICBuZXdNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZywgc25hY2s6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xuICAgIGlmKHNuYWNrKSB7XG4gICAgICB0aGlzLl9zbmFja0Jhci5vcGVuKG1lc3NhZ2UsICdGZXJtZXInLCB7ZHVyYXRpb246IDUwMDB9KVxuICAgIH1cbiAgICB0aGlzLl9zdWNjZXNzTWVzc2FnZS5uZXh0KG1lc3NhZ2UpO1xuICB9XG5cbiAgbmV3RXJyb3IobWVzc2FnZTogc3RyaW5nLCBzbmFjazogYm9vbGVhbiA9IGZhbHNlKTogdm9pZCB7XG4gICAgaWYoc25hY2spIHtcbiAgICAgIHRoaXMuX3NuYWNrQmFyLm9wZW4obWVzc2FnZSwgJ0Zlcm1lcicsIHtcbiAgICAgICAgZHVyYXRpb246IDYwICogMTAwMCxcbiAgICAgICAgcGFuZWxDbGFzczogJ2Vycm9yJ1xuICAgICAgfSlcbiAgICB9XG4gICAgdGhpcy5fZXJyb3JNZXNzYWdlLm5leHQobWVzc2FnZSk7XG4gIH1cbn1cbiJdfQ==