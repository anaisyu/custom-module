import { Inject, Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
export class TitleService {
    constructor(title, siteTitleBase) {
        this.title = title;
        this.siteTitleBase = siteTitleBase;
    }
    setTitle(newTitle) {
        this.title.setTitle(newTitle);
    }
    appendToTitle(newTitle) {
        this.setTitle(this.title.getTitle() + ' - ' + newTitle);
    }
    appendToBaseTitle(newTitle) {
        this.setTitle(this.siteTitleBase + ' - ' + newTitle);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: TitleService, deps: [{ token: i1.Title }, { token: 'siteTitleBase' }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: TitleService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: TitleService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: () => [{ type: i1.Title }, { type: undefined, decorators: [{
                    type: Inject,
                    args: ['siteTitleBase']
                }] }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2N1c3RvbS1kaXNwbGF5L3NyYy9saWIvc2VydmljZS90aXRsZS90aXRsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7QUFNakQsTUFBTSxPQUFPLFlBQVk7SUFFdkIsWUFDVSxLQUFZLEVBQ2EsYUFBcUI7UUFEOUMsVUFBSyxHQUFMLEtBQUssQ0FBTztRQUNhLGtCQUFhLEdBQWIsYUFBYSxDQUFRO0lBR3hELENBQUM7SUFFTSxRQUFRLENBQUMsUUFBZ0I7UUFDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLGFBQWEsQ0FBQyxRQUFnQjtRQUNuQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsS0FBSyxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFTSxpQkFBaUIsQ0FBQyxRQUFnQjtRQUN2QyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7K0dBbkJVLFlBQVksdUNBSWIsZUFBZTttSEFKZCxZQUFZLGNBRlgsTUFBTTs7NEZBRVAsWUFBWTtrQkFIeEIsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7OzBCQUtJLE1BQU07MkJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGl0bGV9IGZyb20gXCJAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyXCI7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFRpdGxlU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB0aXRsZTogVGl0bGUsXG4gICAgQEluamVjdCgnc2l0ZVRpdGxlQmFzZScpIHByaXZhdGUgc2l0ZVRpdGxlQmFzZTogc3RyaW5nXG4gICkge1xuXG4gIH1cblxuICBwdWJsaWMgc2V0VGl0bGUobmV3VGl0bGU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMudGl0bGUuc2V0VGl0bGUobmV3VGl0bGUpO1xuICB9XG5cbiAgcHVibGljIGFwcGVuZFRvVGl0bGUobmV3VGl0bGU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuc2V0VGl0bGUodGhpcy50aXRsZS5nZXRUaXRsZSgpICsgJyAtICcgKyBuZXdUaXRsZSk7XG4gIH1cblxuICBwdWJsaWMgYXBwZW5kVG9CYXNlVGl0bGUobmV3VGl0bGU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuc2V0VGl0bGUodGhpcy5zaXRlVGl0bGVCYXNlICsgJyAtICcgKyBuZXdUaXRsZSk7XG4gIH1cbn1cbiJdfQ==