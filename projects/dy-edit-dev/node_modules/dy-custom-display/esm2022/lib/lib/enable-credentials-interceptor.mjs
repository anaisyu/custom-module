import { Injectable } from '@angular/core';
import { finalize } from 'rxjs';
import { LoadingService } from "../service/loading/loading.service";
import * as i0 from "@angular/core";
/** Pass untouched request through to the next request handler. */
export class EnableCredentialsInterceptor {
    intercept(request, next) {
        request = request.clone({
            withCredentials: true
        });
        const isGraphQLQuery = request.body && request.body.operationName && request.body.query &&
            request.body.query.trim().startsWith('query');
        if (request.method != "GET" && !isGraphQLQuery) {
            LoadingService.startLoading();
        }
        return next.handle(request).pipe(finalize(() => {
            if (request.method != "GET" && !isGraphQLQuery) {
                LoadingService.stopLoading();
            }
        }));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: EnableCredentialsInterceptor, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: EnableCredentialsInterceptor }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.10", ngImport: i0, type: EnableCredentialsInterceptor, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5hYmxlLWNyZWRlbnRpYWxzLWludGVyY2VwdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY3VzdG9tLWRpc3BsYXkvc3JjL2xpYi9saWIvZW5hYmxlLWNyZWRlbnRpYWxzLWludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHekMsT0FBTyxFQUFDLFFBQVEsRUFBYSxNQUFNLE1BQU0sQ0FBQztBQUMxQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sb0NBQW9DLENBQUM7O0FBRWxFLGtFQUFrRTtBQUVsRSxNQUFNLE9BQU8sNEJBQTRCO0lBRXZDLFNBQVMsQ0FBQyxPQUF5QixFQUFFLElBQWlCO1FBQ3BELE9BQU8sR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO1lBQ3RCLGVBQWUsRUFBRSxJQUFJO1NBQ3RCLENBQUMsQ0FBQztRQUdILE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxhQUFhLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLO1lBQ3JGLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVoRCxJQUFHLE9BQU8sQ0FBQyxNQUFNLElBQUksS0FBSyxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQzdDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUMvQjtRQUVELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRTtZQUM3QyxJQUFHLE9BQU8sQ0FBQyxNQUFNLElBQUksS0FBSyxJQUFJLENBQUMsY0FBYyxFQUFFO2dCQUM3QyxjQUFjLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDOUI7UUFDSCxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ04sQ0FBQzsrR0FwQlUsNEJBQTRCO21IQUE1Qiw0QkFBNEI7OzRGQUE1Qiw0QkFBNEI7a0JBRHhDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtIdHRwRXZlbnQsIEh0dHBIYW5kbGVyLCBIdHRwSW50ZXJjZXB0b3IsIEh0dHBSZXF1ZXN0fSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cbmltcG9ydCB7ZmluYWxpemUsIE9ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtMb2FkaW5nU2VydmljZX0gZnJvbSBcIi4uL3NlcnZpY2UvbG9hZGluZy9sb2FkaW5nLnNlcnZpY2VcIjtcblxuLyoqIFBhc3MgdW50b3VjaGVkIHJlcXVlc3QgdGhyb3VnaCB0byB0aGUgbmV4dCByZXF1ZXN0IGhhbmRsZXIuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRW5hYmxlQ3JlZGVudGlhbHNJbnRlcmNlcHRvciBpbXBsZW1lbnRzIEh0dHBJbnRlcmNlcHRvciB7XG5cbiAgaW50ZXJjZXB0KHJlcXVlc3Q6IEh0dHBSZXF1ZXN0PGFueT4sIG5leHQ6IEh0dHBIYW5kbGVyKTogT2JzZXJ2YWJsZTxIdHRwRXZlbnQ8YW55Pj4ge1xuICAgIHJlcXVlc3QgPSByZXF1ZXN0LmNsb25lKHtcbiAgICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZVxuICAgIH0pO1xuXG5cbiAgICBjb25zdCBpc0dyYXBoUUxRdWVyeSA9IHJlcXVlc3QuYm9keSAmJiByZXF1ZXN0LmJvZHkub3BlcmF0aW9uTmFtZSAmJiByZXF1ZXN0LmJvZHkucXVlcnkgJiZcbiAgICAgIHJlcXVlc3QuYm9keS5xdWVyeS50cmltKCkuc3RhcnRzV2l0aCgncXVlcnknKTtcblxuICAgIGlmKHJlcXVlc3QubWV0aG9kICE9IFwiR0VUXCIgJiYgIWlzR3JhcGhRTFF1ZXJ5KSB7XG4gICAgICBMb2FkaW5nU2VydmljZS5zdGFydExvYWRpbmcoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV4dC5oYW5kbGUocmVxdWVzdCkucGlwZShmaW5hbGl6ZSgoKSA9PiB7XG4gICAgICBpZihyZXF1ZXN0Lm1ldGhvZCAhPSBcIkdFVFwiICYmICFpc0dyYXBoUUxRdWVyeSkge1xuICAgICAgICBMb2FkaW5nU2VydmljZS5zdG9wTG9hZGluZygpO1xuICAgICAgfVxuICAgIH0pKTtcbiAgfVxufVxuXG5cbiJdfQ==